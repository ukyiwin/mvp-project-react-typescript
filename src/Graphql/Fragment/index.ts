import gql from 'graphql-tag';

/**
 * @description user graphql fragment
 */
export const USER_FRAGMENT = gql`
  fragment userFragment on User {
    id
    createdAt
    updatedAt
    email
    username
    avatar
    headerImage
    password
    firstname
    lastname
    facebookAuthId
    twitterAuthId
    linkedInAuthId
    bio
    postCount: articles(where: {isPublished: true}){
      id
    }
    userFiles{
      id
      url
      name
      size
      contentType
    }
    gender
    country{
      id
      name
    }
    institution{
      id
      title
    }
    department{
      name
      id
      createdAt
    }
    interest{
      id
      name
      avatar
    }
    messages{
      text
      sent
      seen
      delivered
      createdAt
      channel{
        id
      }
    }
    connections{
      username
      id
      firstname
      lastname
    }
    following{
      username
      id
      firstname
      lastname
    }
    followers{
      username
      id
      firstname
      lastname
    }
    type
    userType
    articles{
      id
      title
      description
    }
    favourites{
      id
      title
      description
    }
    channels{
      id
      description
      title
    }
    myChannels{
      id
      description
      title
    }
    pendingChannels{
      id
      description
      title
    }
    blockedChannels{
      id
      description
      title
    }
    moderatorsChannels{
      id
      description
      title
    }
    likedArticles{
      id
      title
      description
    }
    comments{
      id
      article{
        id
      }
      body
    }
    newConnectNot
    notifications{
      id
      createdAt
      verb
      type
      message{
        text
        id
        createdAt
      }
      article{
        title
        id
        createdAt
      }
      seen
      sent
      slug
      actor{
        username
        avatar
        firstname
        lastname
      }
    }
    actorNotifications{
      id
      createdAt
      verb
      type
      message{
        text
        id
        createdAt
      }
      article{
        title
        id
        createdAt
      }
      seen
      sent
      slug
      actor{
        username
        avatar
        firstname
        lastname
      }
    }
    newCommentNot
    newMessageNot
    newCommunityNot
    newProfileNot
    topWeeklyArticleNot
    mentionMeNot
    enableBrowserPushNot
    enableMobilePushNot
    enableLocation
    deviceIds
    completedProfile
    verified
    location{
      id
      latitude
      longitude
    }
  }
`;

/**
 * @description user graphql fragment
 */
export const ARTICLE_FRAGMENT = gql`
  fragment articleFragment on Article {
    id
    title
    body
    description
    isPublished
    createdAt
    updatedAt
    comments{
      id
    }
    userFavourited{
      username
    }
    likes{
      username
      avatar
    }
    headerImage {
      id
      url
    }
    author{
      id
      username
      email
      avatar
      headerImage
      firstname
      lastname
      type
      department {
        name
      }
      institution{
        title
      }
    }
    category{
      id
      name
      avatar
      createdAt
    }
    link
    type
  }
`;

/**
 * @description user graphql fragment
 */
export const MESSAGE_FRAGMENT = gql`
  fragment messageFragment on Article {
    text
    user {
      id
      username
    }
    cahnnel {
      id
      updatedAt
    }
    createdAt
    updatedAt
  }
`;