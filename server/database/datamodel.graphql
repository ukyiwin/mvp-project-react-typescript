type Post {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  isPublished: Boolean! @default(value: "false")
  title: String!
  text: String!
}

type Article {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  isPublished: Boolean! @default(value: "false")
  title: String!
  body: String!
  type: Arcticletype
  author: User! @relation(name: "ArticleOwner")
}

type Country {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  shortName: String! @unique
  name: String! @unique
}

type Institutions {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  type: InstitutionType!
  Country: Country!
}

type School {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  institution: Institutions!
}

type Faculty {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  school: School!
}

type Department {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  Country: Country!
}

type User {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String! @unique
  username: String @unique
  password: String!
  firstname: String!
  lastname: String!
  gender: String!
  favourites: [Discussion!]! @relation(name: "UserFavDiscussion")
  myDiscussions: Discussion @relation(name: "DiscussionOnUser")
  connectTo: [Connect!]! @relation(name: "ConectTo")
  ConectFrom: [Connect!]! @relation(name: "ConectFrom")
  type: String @default(value: "Student")
  articles: [Article!]!  @relation(name: "ArticleOwner")
  opinions: [Opinions!]!
}

type Connect {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  to: User! @relation(name: "ConectTo")
  from: User! @relation(name: "ConectFrom")
  accepted: Boolean! @default(value: "false")
}

type Forum {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  slug: String
  author: User!
  private: Boolean! @default(value: "false")
}

type Discussion {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  slug: String
  content: String!
  tags: [String!]!
  favourites: [User!]! @relation(name: "UserFavDiscussion")
  author: User! @relation(name: "DiscussionOnUser")
  private: Boolean! @default(value: "false")
  opinions: [Opinions!]!
}

type Opinions {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  content: String!
  author: User!
  discussion: Discussion!
}

enum Usertype{
  Student
  Lecturer
  Admin
  Editor
  Super
}

enum InstitutionType{
  University
  College
}

enum Arcticletype{
  External
  Internal
}

enum Gender{
  Male
  Female
}