{"version":3,"file":"0.314eb338ce1bf8b1463b.hot-update.js","sources":["webpack:///./src/Containers/App/index.tsx","webpack:///./src/link.ts","webpack:///./src/server.tsx","webpack:///external \"react-cookie-banner\""],"sourcesContent":["import * as React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { CookiesProvider, CookieBannerUniversal } from 'react-cookie-banner';\nimport { Helmet } from 'react-helmet';\nimport { withApollo, graphql, compose, ChildProps } from 'react-apollo';\nimport Loadable from 'react-loadable';\nimport { PublicLayout, PrivateLayout, EmptyLayout, ProfileLayout } from 'Components/Layouts/MainLayout';\nimport { isTokenExpired } from 'Utils/jwtHelper';\nimport { AUTH_TOKEN } from '../../constants';\nimport { PrivateHeader } from 'Components/Layouts/Header';\nimport LoadingComponent from 'Components/Loading';\nimport SideBar from 'Components/Layouts/SideBar';\nimport { User } from 'CustomTypings/schema';\nimport { ME } from 'Graphql/Query';\nimport 'Theme/application.scss';\nimport './style.scss';\n// import { cookies } from '../../link';\n\nconst Home = Loadable({\n  loader: () => import('Containers/Home'),\n  loading: () => <LoadingComponent />,\n});\n\nconst NotFound = Loadable({\n  loader: () => import('Containers/NotFound'),\n  loading: () => <LoadingComponent />,\n});\n\nconst Profile = Loadable({\n  loader: () => import('Containers/Profile'),\n  loading: () => <LoadingComponent />,\n});\n\nconst PublicHome = Loadable({\n  loader: () => import('Containers/HomePublic'),\n  loading: () => <LoadingComponent />,\n});\nconst Login = Loadable({\n  loader: () => import('Containers/Auth/Login'),\n  loading: () => <LoadingComponent />,\n});\n\nconst Signup = Loadable({\n  loader: () => import('Containers/Auth/Signup'),\n  loading: () => <LoadingComponent />,\n});\nconst ArticleDetail = Loadable({\n  loader: () => import('Containers/ArticleDetail'),\n  loading: () => <LoadingComponent />,\n});\n\nconst Interest = Loadable({\n  loader: () => import('Containers/Auth/Signup/interest'),\n  loading: () => <LoadingComponent />,\n});\nconst Maps = Loadable({\n  loader: () => import('Containers/Maps'),\n  loading: () => <LoadingComponent />,\n});\n\nconst Compose = Loadable({\n  loader: () => import('Containers/ComposeArticle'),\n  loading: () => <LoadingComponent />,\n});\n\nconst Message = Loadable({\n  loader: () => import('Containers/Message'),\n  loading: () => <LoadingComponent />,\n});\n\nconst Forum = Loadable({\n  loader: () => import('Containers/Forum'),\n  loading: () => <LoadingComponent />,\n});\n\nconst FinishSignup = Loadable({\n  loader: () => import('Containers/Auth/Signup/finishSignup'),\n  loading: () => <LoadingComponent />,\n});\n\nconst SignupProfile = Loadable({\n  loader: () => import('Containers/Auth/Signup/signupProfile'),\n  loading: () => <LoadingComponent />,\n});\n\ninterface Props {\n    // tslint:disable-next-line:no-any\n    client?: any;\n    // tslint:disable-next-line:no-any\n    history?: any;\n    // tslint:disable-next-line:no-any\n    allInterest: any;\n}\n\ninterface Response {\n    me: User;\n}\n\ninterface State {\n    isAuthenticated: boolean;\n    token: string;\n    expireToken: boolean;\n    me: object;\n    avatar: string;\n}\n\nclass App extends React.Component<Props & ChildProps<Response, {}>, State> {\n    state = {\n        isAuthenticated: false,\n        token: '',\n        expireToken: false,\n        avatar: '',\n        me: {\n            id: '',\n            firstname: '',\n            lastname: '',\n            email: '',\n        },\n    };\n\n    componentWillMount() {\n        /*const token = cookies.get(AUTH_TOKEN);\n        cookies.set('test', 'a', {\n          expires: new Date(2020-05-04),\n          path: '/api',\n          domain: '*.example.com',\n          secure: true\n        });\n        if (token !== null && token !== undefined) {\n            const expired = isTokenExpired(token);\n            if (!expired) {\n                this.setState({ isAuthenticated: true });\n                this.setState({ token });\n                this.setState({ expireToken: expired });\n                this.loadMe();\n            } else {\n                cookies.remove(AUTH_TOKEN, '', -1);\n                this.setState({ isAuthenticated: false });\n                this.setState({ token: '' });\n                this.setState({ expireToken: false });\n            }\n        }*/\n    }\n\n    componentDidMount() {\n        // this.props.\n        // tslint:disable-next-line:no-console\n        console.log(this.props.me);\n    }\n\n    refreshToken = (token: string) => {\n        this.setState({\n            token,\n        });\n\n        if (token !== '' && token !== undefined) {\n            this.setState({\n                isAuthenticated: true,\n            });\n            // this.loadMe();\n        }\n    }\n\n    _logout = () => {\n        // localStorage.removeItem(AUTH_TOKEN);\n        this.setState({ isAuthenticated: false });\n        this.setState({ token: '' });\n        this.setState({ expireToken: false });\n    }\n\n    loadMe() {\n        this.props.client\n            .query({\n                query: ME,\n            })\n            .then(({ data }) => {\n                // tslint:disable-next-line:no-console\n                console.log(data.me);\n                this.setState({ me: data.me });\n\n                if (data.me.completedProfile === 1) {\n                    this.props.history.replace('/add/profile');\n                } else if (data.me.completedProfile === 2) {\n                    this.props.history.replace('/add/interest');\n                }\n\n                this.setState({ avatar: data.me.avata.url });\n                // tslint:disable-next-line:no-console\n                console.log(this.state.avatar);\n            })\n            .catch((error) => {\n                // localStorage.removeItem(AUTH_TOKEN);\n                if (error) {\n                    // tslint:disable-next-line:no-console\n                    console.log('grooom');\n                    // this.setState({isAuthenticated: false});\n                    this.setState({ token: '' });\n                    this.setState({ expireToken: false });\n                }\n            });\n    }\n\n    render() {\n        const { isAuthenticated } = this.state;\n        // const userAuthed = token ? true : false;\n        // tslint:disable-next-line:no-console\n        console.log(isAuthenticated);\n\n        return (\n            <div className=\"uk-offcanvas-content bg-muted\" style={{ minHeight: '40vh', backgroundColor: '#e4e6eb' }}>\n                \n                <Helmet>\n                    <title>Unizonn</title>\n                    <meta name=\"an inclusive community\" content=\"Unizonn community\" />\n                </Helmet>\n                <PrivateHeader avatar={this.state.avatar} isAuthenticated={isAuthenticated} logout={this._logout} />\n                <Switch>\n                    <Route\n                        exact={true}\n                        path=\"/\"\n                        render={() =>\n                            isAuthenticated ? (\n                                <PrivateLayout component={Home} isAuthenticated={isAuthenticated} />\n                            ) : (\n                                <PublicLayout component={PublicHome} isAuthenticated={isAuthenticated} />\n                            )\n                        }\n                        // tslint:disable-next-line:jsx-alignment\n                    />\n                    <PrivateLayout component={Home} path=\"/home\" isAuthenticated={isAuthenticated} />\n                    <PublicLayout \n                      component={Login}\n                      refreshToken={this.refreshToken}\n                      path=\"/login\"\n                      isAuthenticated={isAuthenticated}  \n                    />\n                    <PublicLayout \n                      component={Login}\n                      exact={true}\n                      refreshToken={this.refreshToken}\n                      path=\"/login/:email\"\n                      isAuthenticated={isAuthenticated}  \n                    />\n                    <PublicLayout \n                      component={Signup}\n                      refreshToken={this.refreshToken}\n                      path=\"/signup\" \n                      isAuthenticated={isAuthenticated}  \n                    />\n                    <PublicLayout \n                      component={Signup}\n                      exact={true}\n                      refreshToken={this.refreshToken}\n                      path=\"/signup/:email\" \n                      isAuthenticated={isAuthenticated}  \n                    />\n                    <EmptyLayout component={FinishSignup} path=\"/signup/complete\" isAuthenticated={isAuthenticated} />\n                    <EmptyLayout \n                      exact={true} \n                      component={SignupProfile} \n                      path=\"/add/profile\" \n                      isAuthenticated={isAuthenticated}\n                    />\n                    <EmptyLayout \n                      path=\"/article/:slug\"\n                      isAuthenticated={isAuthenticated} \n                      component={ArticleDetail}\n                    />\n                    <EmptyLayout component={Interest} path=\"/add/interest\" isAuthenticated={isAuthenticated} />\n                    <EmptyLayout component={Maps} path=\"/library\" isAuthenticated={isAuthenticated} />\n                    <EmptyLayout component={Message} path=\"/message\" isAuthenticated={isAuthenticated} />\n                    <EmptyLayout component={Forum} path=\"/Forum\" isAuthenticated={isAuthenticated} />\n                    <EmptyLayout component={Compose} path=\"/write\" isAuthenticated={isAuthenticated} />\n                    <ProfileLayout component={Profile} path=\"/profile\" isAuthenticated={isAuthenticated}/>\n                    <ProfileLayout component={Profile} path=\"/profile/:id\" isAuthenticated={isAuthenticated}/>\n                    <Route component={NotFound} path=\"*\" />\n                    <PrivateLayout \n                      path=\"/logout\"\n                      isAuthenticated={isAuthenticated} \n                      render={() => this._logout()}  \n                    />\n                </Switch>\n                <SideBar />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(compose(withApollo, graphql<Response, {}>(ME))(App));\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Containers/App/index.tsx","import { ApolloLink } from 'apollo-link';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport { WebSocketLink } from 'apollo-link-ws';\r\nimport { onError } from 'apollo-link-error';\r\nimport { getMainDefinition } from 'apollo-utilities';\r\nimport { Cookies } from 'react-cookie-banner';\r\n// import { createPersistedQueryLink } from 'apollo-link-persisted-queries';\r\nimport { RetryLink } from 'apollo-link-retry';\r\nimport resolvers from 'Graphql/Resolvers';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { withClientState } from 'apollo-link-state';\r\nimport fetch from 'node-fetch';\r\n\r\nconst AUTH_TOKEN = 'token';\r\nexport const cookies = new Cookies('unizonn');\r\n\r\nexport const errorLink = onError(({ graphQLErrors, networkError }) => {\r\n  /*\r\n  onError receives a callback in the event a GraphQL or network error occurs.\r\n  This example is a bit contrived, but in the real world, you could connect\r\n  a logging service to the errorLink or perform a specific action in response\r\n  to an error.\r\n  */\r\n  // tslint:disable-next-line:curly\r\n  if (graphQLErrors)\r\n    graphQLErrors.map(({ message, location, path }) =>\r\n      console.log(\r\n        `[GraphQL error]: Message: ${message}, Location: ${location}, Path: ${path}`\r\n      )\r\n    );\r\n  // tslint:disable-next-line:curly\r\n  if (networkError) console.log(`[Network error]: ${networkError}`);\r\n});\r\n\r\nexport const httpLink = new HttpLink({ uri: 'https://uniserver.now.sh', fetch });\r\n\r\nexport const middlewareLink = new ApolloLink((operation: any, forward: any) => {\r\n  // get the authentication token from local storage if it exists\r\n  const authToken = cookies.get(AUTH_TOKEN);\r\n  // return the headers to the context so httpLink can read them\r\n  operation.setContext({\r\n    headers: {\r\n      Authorization: authToken ? `Bearer ${authToken}` : '',\r\n    }\r\n  });\r\n  return forward(operation);\r\n});\r\n\r\nexport const httpLinkAuth = middlewareLink.concat(httpLink);\r\n\r\nexport const subscriptionLink = (config = {}) =>\r\n  new WebSocketLink({\r\n    uri:\r\n      process.env.NODE_ENV !== 'production'\r\n        ? 'ws://uniserver.now.sh'\r\n        : 'wss://uniserver.now.sh',\r\n    options: { reconnect: true },\r\n    ...config,\r\n  });\r\n\r\nexport const queryOrMutationLink = (config = {}) =>\r\n  // turn on CDN support via GET\r\n  // createPersistedQueryLink({ useGETForHashedQueries: true }).concat(\r\n    new HttpLink({\r\n      ...config,\r\n      credentials: 'same-origin',\r\n    });\r\n  // );\r\n\r\nexport const requestLink = ({ queryOrMutationLink, subscriptionLink }) =>\r\n  /*\r\n    This link checks if the operation is a subscription.\r\n    If it is, we use our subscription link to retrieve data over WebSockets.\r\n    If it is a query or mutation, we retrieve data over HTTP.\r\n  */\r\n  ApolloLink.split(\r\n    ({ query }) => {\r\n      const { kind, operation } = getMainDefinition(query);\r\n      return kind === 'OperationDefinition' && operation === 'subscription';\r\n    },\r\n    subscriptionLink,\r\n    queryOrMutationLink\r\n);\r\n\r\nconst defaults = { appState: 'INITIAL' };\r\n\r\nexport const retryLink = new RetryLink();\r\n\r\nexport const cache = new InMemoryCache();\r\n\r\nexport const stateLink = withClientState({\r\n  cache,\r\n  resolvers,\r\n  defaults\r\n});\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/link.ts","import * as express from 'express';\nimport * as React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport { StaticRouter } from 'react-router-dom';\n\nimport { getBundles } from 'react-loadable/webpack';\nimport { Capture } from 'react-loadable';\nimport stats from '../build/react-loadable.json';\nimport App from './Containers/App';\nimport 'isomorphic-unfetch';\nimport ApolloClient from 'apollo-client';\nimport { ApolloProvider, renderToStringWithData } from 'react-apollo';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport fetch from 'node-fetch';\n// import { createPersistedQueryLink } from 'apollo-link-persisted-queries';\nimport {\n  errorLink,\n  httpLinkAuth,\n  requestLink,\n  retryLink,\n  stateLink\n} from './link';\n\nconst links = [\n  errorLink,\n  retryLink,\n  stateLink,\n  httpLinkAuth\n];\n\nlet assets: any;\n\nString.prototype.truncString = function(this: string, add: string, max: number) {\n  add = add || '...';\n  return (this.length > max ? this.substring(0, max) + add : this);\n};\n\nString.prototype.lengthInMinutes = function(this: string) {\n  \n    const min = this.split(' ').length / 250;\n    if (min <= 0 || min === 0) {\n      return 'less than a minute read';\n    } else if (min <= 0.9 || min === 0.9) {\n      return 'less than a minute read';\n    } else {\n      return `${min} min read`;\n    }\n};\n\nconst syncLoadAssets = () => {\n    assets = require(process.env.RAZZLE_ASSETS_MANIFEST!);\n};\nsyncLoadAssets();\n\nconst server = express();\n\nserver\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR!))\n  .get('/*', (req: express.Request, res: express.Response) => {\n    \n    if (process.env.NODE_ENV === 'production') {\n      // links.unshift(createPersistedQueryLink());\n    }\n\n    const client = new ApolloClient({\n      ssrMode: true,\n      link: ApolloLink.from(links),\n      cache: new InMemoryCache(),\n    });\n    \n    const context = {} as any;\n    const modules = [] as any;\n    const markup = renderToString(\n      <Capture report={(moduleName) => modules.push(moduleName)}>\n      <ApolloProvider client={client}>\n          <StaticRouter context={context} location={req.url}>\n            <App />\n          </StaticRouter>\n      </ApolloProvider>\n      </Capture>,\n    );\n\n    if (context.url) {\n      res.redirect(context.url);\n    } else {\n      const bundles = getBundles(stats, modules);\n      const chunks = bundles.filter((bundle) => bundle.file.endsWith('.js'));\n      res.send(\n        `<!doctype html>\n        <html lang=\"\">\n          <head>\n              <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n              <meta charSet='utf-8' />\n              <title>Unizonn</title>\n              <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=yes\">\n              <meta name=\"mobile-web-app-capable\" content=\"yes\">\n              <!--\n                manifest.json provides metadata used when your web app is added to the\n                homescreen on Android. See https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/\n              -->\n              <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\">\n              <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\">\n              <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\">\n              <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n              <link rel=\"manifest\" href=\"/site.webmanifest\">\n              <link rel=\"mask-icon\" href=\"/safari-pinned-tab.svg\" color=\"#5bbad5\">\n              <meta name=\"msapplication-TileColor\" content=\"#da532c\">\n              <meta name=\"theme-color\" content=\"teal\">\n\n              <link href='https://fonts.googleapis.com/css?family=Poppins' rel='stylesheet'>\n              <link href='https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.2/assets/owl.carousel.css' rel='stylesheet'>\n              <link href=\"https://fonts.googleapis.com/css?family=Roboto+Mono:400,500,700\" rel=\"stylesheet\">\n              <link href=\"https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.0/normalize.min.css\" rel=\"stylesheet\">\n              <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" />\n              <link src=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/fonts/fontawesome-webfont.svg\"></script>\n\n              ${\n                assets.client.css\n                  ? `<link rel=\"stylesheet\" href=\"${assets.client.css}\">`\n                  : ''\n              }\n              ${\n                process.env.NODE_ENV === 'production'\n                  ? `<script src=\"${assets.client.js}\" defer></script>`\n                  : `<script src=\"${assets.client.js}\" defer crossorigin></script>`\n              }\n              \n              <script src=\"https://cdnjs.cloudflare.com/ajax/libs/uikit/3.0.0-beta.40/js/uikit.min.js\"></script>\n              <script src=\"https://cdnjs.cloudflare.com/ajax/libs/uikit/3.0.0-beta.40/js/uikit-icons.min.js\"></script>\n          </head>\n          <body>\n              <div id=\"root\">${markup}</div>\n              <script src=\"https://cdnjs.cloudflare.com/ajax/libs/animejs/2.2.0/anime.min.js\"></script>\n              <script src=\"./js/lib/jquery.js\"></script>\n              <script src=\"./js/lib/bootstrap.min.js\"></script>\n              <script src=\"https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.2/owl.carousel.min.js\"></script>\n              <script src=\"./js/lib/css3-animate-it.js\"></script>\n              <script src=\"./crack.js\"></script>\n              <script src=\"./timeago-in-words.js\"></script>\n              <script>\n                function anima() {\n                  [].slice.call(document.querySelectorAll('.grid--effect-vega > .grid__item')).forEach(function(stackEl) {\n                    new VegaFx(stackEl);\n                  });\n                  [].slice.call(document.querySelectorAll('.grid--effect-castor > .grid__item')).forEach(function(stackEl) {\n                    new CastorFx(stackEl);\n                  });\n                  [].slice.call(document.querySelectorAll('.grid--effect-hamal > .grid__item')).forEach(function(stackEl) {\n                    new HamalFx(stackEl);\n                  });\n                  [].slice.call(document.querySelectorAll('.grid--effect-polaris > .grid__item')).forEach(function(stackEl) {\n                    new PolarisFx(stackEl);\n                  });\n                  [].slice.call(document.querySelectorAll('.grid--effect-alphard > .grid__item')).forEach(function(stackEl) {\n                    new AlphardFx(stackEl);\n                  });\n                  [].slice.call(document.querySelectorAll('.grid--effect-altair > .grid__item')).forEach(function(stackEl) {\n                    new AltairFx(stackEl);\n                  });\n                  [].slice.call(document.querySelectorAll('.grid--effect-rigel > .grid__item')).forEach(function(stackEl) {\n                    new RigelFx(stackEl);\n                  });\n                  [].slice.call(document.querySelectorAll('.grid--effect-canopus > .grid__item')).forEach(function(stackEl) {\n                    new CanopusFx(stackEl);\n                  });\n                  [].slice.call(document.querySelectorAll('.grid--effect-pollux > .grid__item')).forEach(function(stackEl) {\n                    new PolluxFx(stackEl);\n                  });\n                  [].slice.call(document.querySelectorAll('.grid--effect-deneb > .grid__item')).forEach(function(stackEl) {\n                    new DenebFx(stackEl);\n                  });\n                };\n              </script>\n          </body>\n        </html>`\n      );\n    }\n  });\n\nexport default server;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/server.tsx","module.exports = require(\"react-cookie-banner\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-cookie-banner\"\n// module id = react-cookie-banner\n// module chunks = 0"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAuBA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAgCA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAsHA;AAtKA;AACA;;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AAEA;AACA;AACA;AACA;AACA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAYA;AACA;AAMA;AAOA;AAMA;AAOA;AACA;AAMA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAGA;AACA;AAEA;;;;;;;;;AChSA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;;;;;AAKA;AACA;AACA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAIA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AAEA;AACA;;;;AAIA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;AC9FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AAGA;AACA;AACA;AACA;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AAEA;AACA;AAEA;;;;;;;;ACtLA;;;;A","sourceRoot":""}