{"version":3,"file":"0.f8438ea74fa598fa894a.hot-update.js","sources":["webpack:///./src/server.tsx"],"sourcesContent":["import * as express from 'express';\nimport * as React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { StaticRouter } from 'react-router-dom';\n\nimport { getBundles } from 'react-loadable/webpack';\nimport { Capture } from 'react-loadable';\nimport stats from '../build/react-loadable.json';\nimport App from './Containers/App';\nimport 'isomorphic-unfetch';\nimport ApolloClient from 'apollo-client';\nimport { ApolloProvider, renderToStringWithData, getDataFromTree } from 'react-apollo';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport fetch from 'node-fetch';\n// import { createPersistedQueryLink } from 'apollo-link-persisted-queries';\nimport {\n  errorLink,\n  httpLinkAuth,\n  requestLink,\n  retryLink,\n  stateLink\n} from './link';\nimport Html from 'Html';\n\nconst links = [\n  errorLink,\n  retryLink,\n  stateLink,\n  httpLinkAuth\n];\n\nlet assets: any;\n\nString.prototype.truncString = function(this: string, add: string, max: number) {\n  add = add || '...';\n  return (this.length > max ? this.substring(0, max) + add : this);\n};\n\nString.prototype.lengthInMinutes = function(this: string) {\n  \n    const min = this.split(' ').length / 250;\n    if (min <= 0 || min === 0) {\n      return 'less than a minute read';\n    } else if (min <= 0.9 || min === 0.9) {\n      return 'less than a minute read';\n    } else {\n      return `${min} min read`;\n    }\n};\n\nconst syncLoadAssets = () => {\n    assets = require(process.env.RAZZLE_ASSETS_MANIFEST!);\n};\nsyncLoadAssets();\n\nconst server = express();\n\nserver\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR!))\n  .get('/*', (req: express.Request, res: express.Response) => {\n    \n    if (process.env.NODE_ENV === 'production') {\n      // links.unshift(createPersistedQueryLink());\n    }\n\n    const client = new ApolloClient({\n      ssrMode: true,\n      link: ApolloLink.from(links),\n      cache: new InMemoryCache(),\n    });\n    \n    const context = {} as any;\n    const modules = [] as any;\n    const markup = (\n      // tslint:disable-next-line:no-unused-expression\n      <Capture report={(moduleName) => modules.push(moduleName)}>\n        <ApolloProvider client={client}>\n            <StaticRouter context={context} location={req.url}>\n              <App />\n            </StaticRouter>\n        </ApolloProvider>\n      </Capture>\n    );\n\n    const bundles = getBundles(stats, modules);\n    const chunks = bundles.filter((bundle) => bundle.file.endsWith('.js'));\n\n    getDataFromTree(markup).then(() => {\n      renderToStringWithData(markup).then((content) => {\n        res.status(200);\n        const html = <Html assets={assets} markup={markup} client={client} />;\n        res.send(`<!doctype html>\\n${renderToStaticMarkup(html)}`);\n        res.end();\n      })\n      .catch((e) => {\n        console.error('RENDERING ERROR:', e); // eslint-disable-line no-console\n        /* res.status(500);\n        res.end(\n          `An error occurred. Please submit ane:\\n\\n${\n            e.stack\n          }`\n        );*/\n        res.status(200);\n        const html = <Html assets={assets} markup={markup} client={client} />;\n        res.send(`<!doctype html>\\n${renderToStaticMarkup(html)}`);\n        res.end();\n      });\n    });\n  });\n\nexport default server;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/server.tsx"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;A","sourceRoot":""}