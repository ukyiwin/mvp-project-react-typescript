{"version":3,"file":"0.1c5fcaee710d6752e56a.hot-update.js","sources":["webpack:///./src/Components/InputBoxLogin/index.tsx","webpack:///./src/Containers/HomePublic/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { compose, graphql, withApollo } from 'react-apollo';\nimport { ChildProps } from 'react-apollo/types';\nimport { USER_EXIST } from 'Graphql/Query';\n\n// import { Link } from 'react-router-dom';\n\ninterface Props {\n    // tslint:disable-next-line:no-any\n    userExist: any;\n    // tslint:disable-next-line:no-any\n    client?: any;\n}\n\ninterface InputProps {\n    email: string;\n}\n\n// tslint:disable-next-line:no-any\nclass InputBoxLogin extends React.Component<RouteComponentProps & Props & ChildProps<boolean, InputProps>, {}> {\n    state = {\n        text: '',\n        loading: false,\n    };\n\n    checkUser = (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        this.props.client\n            .query({\n                query: USER_EXIST,\n                variables: {\n                    email: this.state.text,\n                },\n            })\n            .then(({ data }) => {\n                data.userExist\n                    ? this.props.history.push({\n                          pathname: '/login',\n                          email: this.state.text,\n                      })\n                    : this.props.history.push({\n                          pathname: '/signup',\n                          email: this.state.text,\n                      });\n                this.setState({ loading: false });\n            })\n            .catch((error) => {\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n        const { loading } = this.state;\n        return (\n            <div className=\"\">\n                <h1 className=\"uk-heading-primary uk-text-bold uk-text-uppercase\">unizonn</h1>\n                <p className=\" uk-text-center uk-margin uk-text-bold\">\n                    Friendly and inclusive community for students and academia\n                </p>\n                <div className=\"uk-flex-stretch\">\n                    <form\n                        onSubmit={this.checkUser}\n                        className=\"uk-margin uk-flex-stretch\"\n                        // tslint:disable-next-line:jsx-boolean-value\n                        uk-margin\n                    >\n                        <div\n                            className=\"uk-margin uk-flex uk-width-1-1\"\n                            // tslint:disable-next-line:jsx-boolean-value\n                            uk-margin\n                        >\n                            <div uk-form-custom=\"target: true\" className=\"uk-width-3-4@m uk-width-1-1@s\">\n                                <input\n                                    type=\"email\"\n                                    onChange={(e) => this.setState({ text: e.target.value })}\n                                    value={this.state.text}\n                                    required={true}\n                                    className=\"uk-input uk-box-shadow-hover-small uk-responsive-width uk-form-large\"\n                                    placeholder=\"Enter email to signin or signup\"\n                                />\n                            </div>\n                            <div className=\"uk-width-1-4@m uk-width-1-1@s\">\n                                {loading ? (\n                                    <div data-uk-spinner=\"ratio: 1\" style={{ marginLeft: 15, color: 'green' }} />\n                                ) : (\n                                    <button className=\"uk-button uk-button-primary uk-button-large\" type=\"submit\">\n                                        GETSTARTED\n                                    </button>\n                                )}\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(\n    compose(\n        withApollo,\n        graphql<boolean, InputProps, Props>(USER_EXIST, {\n            name: 'userExist',\n            options: { variables: { email: '' } },\n        }),\n    )(InputBoxLogin),\n);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Components/InputBoxLogin/index.tsx","import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Parallax } from 'react-spring';\nimport InputBoxLogin from 'Components/InputBoxLogin';\n\nimport './style.scss';\n\ninterface Props {\n    classes?: object;\n    history: object;\n}\n\nconst url = (name, wrap = false) => `${wrap ? 'url(' : ''}https://awv3node-homepage.surge.sh/build/assets/${name}.svg${wrap ? ')' : ''}`;\nconst Pink = ({ children }) => <span style={{ color: '#FF6AC1' }}>{children}</span>;\nconst Yellow = ({ children }) => <span style={{ color: '#EFF59B' }}>{children}</span>;\nconst Lightblue = ({ children }) => <span style={{ color: '#9AEDFE' }}>{children}</span>;\nconst Green = ({ children }) => <span style={{ color: '#57EE89' }}>{children}</span>;\nconst Blue = ({ children }) => <span style={{ color: '#57C7FF' }}>{children}</span>;\nconst Gray = ({ children }) => <span style={{ color: '#909090' }}>{children}</span>;\n\nconst Page = ({ offset, caption, first, second, gradient, onClick }) => (\n  <React.Fragment>\n    <Parallax.Layer offset={offset} speed={0.2} onClick={onClick}>\n      <div className=\"slopeBegin\" />\n    </Parallax.Layer>\n\n    <Parallax.Layer offset={offset} speed={-0.2} onClick={onClick}>\n      <div className={`slopeEnd ${gradient}`} />\n    </Parallax.Layer>\n\n    <Parallax.Layer className=\"text number\" offset={offset} speed={0.3}>\n      <span>0{offset + 1}</span>\n    </Parallax.Layer>\n\n    <Parallax.Layer className=\"text header\" offset={offset} speed={0.4}>\n      <span>\n        <p style={{ fontSize: 20 }}>{caption}</p>\n        <div className={`stripe ${gradient}`} />\n        <p>{first}</p>\n        <p>{second}</p>\n      </span>\n    </Parallax.Layer>\n  </React.Fragment>\n);\nclass HomePublic extends React.Component<Props> {\n    \n  parallax: any;\n    state = {\n        strokeDashOffset: 0,\n        pinPin: false,\n        pinUnpin: false,\n    };\n\n    componentWillMount() {\n        // dhsj\n    }\n\n    componentDidMount() {\n        // kjk\n    }\n\n    componentWillUnmount() {\n        // hjh\n    }\n\n    render() {\n        // const { classes } = this.props;\n        return (\n          <Parallax ref={(ref) => (this.parallax = ref)} pages={3}>\n            <Parallax.Layer offset={1} speed={1} style={{ backgroundColor: '#805E73' }} />\n            <Parallax.Layer offset={2} speed={1} style={{ backgroundColor: '#87BCDE' }} />\n\n            <Parallax.Layer offset={0} speed={0} factor={3} style={{ backgroundImage: url('stars', true), backgroundSize: 'cover' }} />\n\n            <Parallax.Layer offset={1.3} speed={-0.3} style={{ pointerEvents: 'none' }}>\n              <img src={url('satellite4')} style={{ width: '15%', marginLeft: '70%' }} />\n              <div\n                    id=\"bg1\"\n                    className=\"uk-flex uk-width-1-1 uk-flex-stretch uk-height-large backgroundOne\"\n                    style={{ height: '100vh' }}\n                >\n                    <div className=\"uk-container uk-container-expand uk-position-center-left uk-flex uk-width-1-1\">\n                        <InputBoxLogin />\n                    </div>\n                </div>\n            </Parallax.Layer>\n\n            <Parallax.Layer offset={1} speed={0.8} style={{ opacity: 0.1 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '55%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '15%' }} />\n            </Parallax.Layer>\n\n            <Parallax.Layer offset={1.75} speed={0.5} style={{ opacity: 0.1 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '70%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '40%' }} />\n            </Parallax.Layer>\n\n            <Parallax.Layer offset={1} speed={0.2} style={{ opacity: 0.2 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '10%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '75%' }} />\n            </Parallax.Layer>\n\n            <Parallax.Layer offset={1.6} speed={-0.1} style={{ opacity: 0.4 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '60%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '25%', marginLeft: '30%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '80%' }} />\n            </Parallax.Layer>\n\n            <Parallax.Layer offset={2.6} speed={0.4} style={{ opacity: 0.6 }}>\n              <img src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '5%' }} />\n              <img src={url('cloud')} style={{ display: 'block', width: '15%', marginLeft: '75%' }} />\n            </Parallax.Layer>\n\n            <Parallax.Layer \n              offset={2.5} \n              speed={-0.4} \n              style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', pointerEvents: 'none' }}\n            >\n              <img src={url('earth')} style={{ width: '60%' }} />\n            </Parallax.Layer>\n\n            <Parallax.Layer\n              offset={2}\n              speed={-0.3}\n              style={{\n                backgroundSize: '80%',\n                backgroundPosition: 'center',\n                backgroundImage: url('clients', true)\n              }}\n            />\n\n            <Parallax.Layer\n              offset={0}\n              speed={0.1}\n              onClick={() => this.parallax.scrollTo(1)}\n              style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n              <img src={url('server')} style={{ width: '20%' }} />\n            </Parallax.Layer>\n\n            <Parallax.Layer\n              offset={1}\n              speed={0.1}\n              onClick={() => this.parallax.scrollTo(2)}\n              style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n              <img src={url('bash')} style={{ width: '40%' }} />\n            </Parallax.Layer>\n\n            <Parallax.Layer\n              offset={2}\n              speed={-0}\n              style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n              onClick={() => this.parallax.scrollTo(0)}>\n              <img src={url('clients-main')} style={{ width: '40%' }} />\n            </Parallax.Layer>\n          </Parallax>\n        );\n    }\n}\n\nexport default HomePublic;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Containers/HomePublic/index.tsx"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAeA;AACA;AAAA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA+CA;AA7CA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAMA;AAKA;AACA;AASA;AAcA;AACA;AAEA;AAIA;AACA;AACA;;;;;;;;;AC1GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AAGA;AACA;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;;AAGA;AACA;AACA;AACA;AACA;AA0GA;AAxGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAKA;AAGA;AAIA;AACA;AACA;AACA;AAGA;AAKA;AAGA;AAKA;AAGA;AAKA;AAIA;AACA;AAEA;;;;;A","sourceRoot":""}