{"version":3,"file":"0.457c6bc0a53c3919b11f.hot-update.js","sources":["webpack:///./src/Containers/Auth/Login/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { withRouter, RouteComponentProps, Link } from 'react-router-dom';\nimport { compose, graphql, withApollo } from 'react-apollo';\nimport { Helmet } from 'react-helmet';\nimport { ChildProps } from 'react-apollo/types';\nimport { LOGIN_USER } from 'Graphql/Mutation';\nimport { User } from 'CustomTypings/schema';\nimport { validateLogin } from 'Utils/helpers';\nimport * as UIkit from 'uikit';\n\nimport './style.scss';\nimport { AUTH_TOKEN, CURRENT_USER } from '../../../constants';\nimport { cookies } from 'link';\n\ninterface Props {\n    // tslint:disable-next-line:no-any\n    login: any;\n    // tslint:disable-next-line:no-any\n    refreshToken?: any;\n    // tslint:disable-next-line:no-any\n    client?: any;\n}\n\ninterface InputProps {\n    email: string;\n    password: string;\n}\n\ninterface Response {\n    token: string;\n    user: User;\n}\n\nclass Login extends React.Component<RouteComponentProps & Props & ChildProps<Response, InputProps>, {}> {\n    state = {\n        show: false,\n        email: '',\n        password: '',\n        everFocusedEmail: false,\n        everFocusedPassword: false,\n        inFocus: '',\n        loading: false,\n    };\n\n    handleEmailChange = (evt) => {\n        this.setState({ email: evt.target.value });\n    }\n\n    handlePasswordChange = (evt) => {\n        this.setState({ password: evt.target.value });\n    }\n\n    componentWillMount() {\n        const email = this.props.location.email;\n        if (email) {\n            this.setState({ email });\n        }\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault();\n        console.log('error from');\n        alert('hhmmh');\n        if (!this.canBeSubmitted()) {\n            return;\n        }\n        this.setState({ loading: true });\n        const { email, password } = this.state;\n        this.props\n            .login({\n                variables: {\n                    email,\n                    password,\n                },\n            })\n            .then((result) => {\n                const token = result.data.login.token;\n                const user = result.data.login.user;\n                cookies.set(AUTH_TOKEN, token);\n                cookies.set(CURRENT_USER, result.data.login.user);\n                this.props.refreshToken(token);\n                this.setState({ loading: false });\n                if (user.completedProfile === 1) {\n                    this.props.history.replace('/add/profile');\n                } else {\n                    this.props.history.replace('/');\n                }\n            })\n            .catch((err) => {\n                this.setState({ loading: false });\n                UIkit.notification(`Error: ${err.message}`, { status: 'danger', pos: 'top-right' });\n            });\n    }\n\n    canBeSubmitted() {\n        const errors = validateLogin(this.state.email, this.state.password);\n        const isDisabled = Object.keys(errors).some((x) => errors[x]);\n        return !isDisabled;\n    }\n\n    render() {\n        const errors = validateLogin(this.state.email, this.state.password);\n        const isDisabled = Object.keys(errors).some((x) => errors[x]);\n\n        return (\n            <div\n                className=\"uk-flex uk-flex-stretch\"\n                // tslint:disable-next-line:jsx-boolean-value\n                data-uk-grid\n                style={{ height: '100vh', backgroundColor: '#ffffff' }}\n            >\n                <Helmet>\n                    <title>Unizonn | Login</title>\n                    <meta name=\"an inclusive community\" content=\"Unizonn login\" />\n                </Helmet>\n                <div className=\"uk-width-2-5 sideBg uk-visible@m\" id=\"sideBg\">\n                    <div className=\"uk-flex uk-flex-stretch uk-flex-middle\">.</div>\n                </div>\n                <div\n                    className=\"uk-container uk-width-3-5@m uk-width-1-1@s uk-flex\n          uk-flex-stretch uk-flex-middle uk-box-shadow-small\"\n                >\n                    <form\n                        className=\"uk-form-vertical uk-width-1-1 uk-margin-large uk-padding-large uk-padding-remove-vertical\"\n                    >\n                        <div className=\"uk-margin\">\n                            <h3 className=\"uk-heading-primary uk-align-center\">Login </h3>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <div className=\"uk-inline uk-width-1-1\">\n                                <span className=\"uk-form-icon\" uk-icon=\"icon: user\" />\n                                <input\n                                    className={`uk-input ${errors.password ? 'uk-form-danger' : ''} `}\n                                    type=\"email\"\n                                    value={this.state.email}\n                                    required={true}\n                                    onChange={this.handleEmailChange}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <div className=\"uk-inline uk-width-1-1\">\n                                <span className=\"uk-form-icon\" uk-icon=\"icon: lock\" />\n                                <input\n                                    className={`uk-input ${errors.password ? 'uk-form-danger' : ''} `}\n                                    type=\"password\"\n                                    value={this.state.password}\n                                    required={true}\n                                    onChange={this.handlePasswordChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <a className={`uk-button uk-button-text}`}>Forgot password?</a>\n                        </div>\n                        <div className=\"uk-margin\">\n                            {this.state.loading ? (\n                                <div\n                                    className=\"uk-spinner uk-icon\"\n                                    data-uk-spinner=\"ratio: 1\"\n                                    style={{ color: 'green' }}\n                                />\n                            ) : (\n                                <button\n                                    className={`uk-button uk-button-primary uk-width-1-1\n                    uk-align-right ${isDisabled ? 'disabled' : 'disabled'}`}\n                                >\n                                    LOGIN\n                                </button>\n                            )}\n                        </div>\n                        <br />\n                        <hr className=\"uk-divider-icon\" />\n                        <div className=\"uk-margin\">\n                            <p className={`uk-button uk-button-text}`}>Don't have an account?</p>\n                            <Link\n                                className={`uk-button uk-button-secondary\n                 uk-align-right`}\n                                to=\"/signup\"\n                            >\n                                Sign up now\n                            </Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(\n  compose(\n    withApollo,\n    graphql<Response, InputProps, Props>(LOGIN_USER, {\n        name: 'login',\n    }),\n  )(Login),\n);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Containers/Auth/Login/index.tsx"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAqBA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAiGA;AAzIA;AACA;AACA;AACA;AACA;AACA;AAqCA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAOA;AACA;AACA;AAEA;AACA;AAEA;AAIA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AASA;AACA;AAEA;AAUA;AAMA;AACA;AACA;AACA;AACA;AAEA;AAUA;AACA;AAEA;AAIA;AACA;;;;;A","sourceRoot":""}