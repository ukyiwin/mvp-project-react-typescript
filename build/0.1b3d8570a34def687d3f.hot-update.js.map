{"version":3,"file":"0.1b3d8570a34def687d3f.hot-update.js","sources":["webpack:///./src/Containers/App/index.tsx","webpack:///./src/Containers/Forum/index.tsx","webpack:///./src/Html.tsx","webpack:///./src/server.tsx","webpack:///external \"react-async-bootstrapper\"","webpack:///external \"react-async-component\"","webpack:///external \"react-dom/server\"","webpack:///external \"react-loadable\"","webpack:///external \"serialize-javascript\""],"sourcesContent":["import * as React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { CookiesProvider, CookieBannerUniversal } from 'react-cookie-banner';\nimport { Helmet } from 'react-helmet';\nimport { withApollo, graphql, compose, ChildProps } from 'react-apollo';\nimport Loadable from 'react-loadable';\nimport { PublicLayout, PrivateLayout, EmptyLayout, ProfileLayout } from 'Components/Layouts/MainLayout';\nimport { isTokenExpired } from 'Utils/jwtHelper';\nimport { AUTH_TOKEN } from '../../constants';\nimport { PrivateHeader } from 'Components/Layouts/Header';\nimport LoadingComponent from 'Components/Loading';\nimport SideBar from 'Components/Layouts/SideBar';\nimport { User } from 'CustomTypings/schema';\nimport { ME } from 'Graphql/Query';\nimport 'Theme/application.scss';\nimport './style.scss';\nimport { cookies } from 'link';\n// import { cookies } from '../../link';\n\nconst Home = Loadable({\n  loader: () => import('Containers/Home'),\n  loading: () => <LoadingComponent />,\n});\n\nconst NotFound = Loadable({\n  loader: () => import('Containers/NotFound'),\n  loading: () => <LoadingComponent />,\n});\n\nconst Profile = Loadable({\n  loader: () => import('Containers/Profile'),\n  loading: () => <LoadingComponent />,\n});\n\nconst PublicHome = Loadable({\n  loader: () => import('Containers/HomePublic'),\n  loading: () => <LoadingComponent />,\n});\nconst Login = Loadable({\n  loader: () => import('Containers/Auth/Login'),\n  loading: () => <LoadingComponent />,\n});\n\nconst Signup = Loadable({\n  loader: () => import('Containers/Auth/Signup'),\n  loading: () => <LoadingComponent />,\n});\nconst ArticleDetail = Loadable({\n  loader: () => import('Containers/ArticleDetail'),\n  loading: () => <LoadingComponent />,\n});\n\nconst Interest = Loadable({\n  loader: () => import('Containers/Auth/Signup/interest'),\n  loading: () => <LoadingComponent />,\n});\nconst Maps = Loadable({\n  loader: () => import('Containers/Maps'),\n  loading: () => <LoadingComponent />,\n});\n\nconst Compose = Loadable({\n  loader: () => import('Containers/ComposeArticle'),\n  loading: () => <LoadingComponent />,\n});\n\nconst Message = Loadable({\n  loader: () => import('Containers/Message'),\n  loading: () => <LoadingComponent />,\n});\n\nconst Forum = Loadable({\n  loader: () => import('Containers/Forum'),\n  loading: () => <LoadingComponent />,\n});\n\nconst FinishSignup = Loadable({\n  loader: () => import('Containers/Auth/Signup/finishSignup'),\n  loading: () => <LoadingComponent />,\n});\n\nconst SignupProfile = Loadable({\n  loader: () => import('Containers/Auth/Signup/signupProfile'),\n  loading: () => <LoadingComponent />,\n});\n\ninterface Props {\n    // tslint:disable-next-line:no-any\n    client?: any;\n    // tslint:disable-next-line:no-any\n    history?: any;\n    // tslint:disable-next-line:no-any\n    allInterest: any;\n}\n\ninterface Response {\n    me: User;\n}\n\ninterface State {\n    isAuthenticated: boolean;\n    token: string;\n    expireToken: boolean;\n    me: object;\n    avatar: string;\n}\n\nclass App extends React.Component<Props & ChildProps<Response, {}>, State> {\n    state = {\n        isAuthenticated: false,\n        token: '',\n        expireToken: false,\n        avatar: '',\n        me: {\n            id: '',\n            firstname: '',\n            lastname: '',\n            email: '',\n        },\n    };\n\n    componentWillMount() {\n      this.props.client.query({\n        query: ME\n      }).then((res) => {\n        // dhjhj\n      });\n      const token = cookies.get(AUTH_TOKEN);\n        /*cookies.set('test', 'a', {\n          expires: new Date(2020-05-04),\n          path: '/api',\n          domain: '*.example.com',\n          secure: true\n        });*/\n      if (token !== null && token !== undefined) {\n            const expired = isTokenExpired(token);\n            if (!expired) {\n                this.setState({ isAuthenticated: true });\n                this.setState({ token });\n                this.setState({ expireToken: expired });\n                this.loadMe();\n            } else {\n                cookies.remove(AUTH_TOKEN, '', -1);\n                this.setState({ isAuthenticated: false });\n                this.setState({ token: '' });\n                this.setState({ expireToken: false });\n            }\n        }\n    }\n\n    componentDidMount() {\n        // this.props.\n        // tslint:disable-next-line:no-console\n        console.log(this.props.me);\n    }\n\n    refreshToken = (token: string) => {\n        this.setState({\n            token,\n        });\n\n        if (token !== '' && token !== undefined) {\n            this.setState({\n                isAuthenticated: true,\n            });\n            // this.loadMe();\n        }\n    }\n\n    _logout = () => {\n        // localStorage.removeItem(AUTH_TOKEN);\n        this.setState({ isAuthenticated: false });\n        this.setState({ token: '' });\n        this.setState({ expireToken: false });\n    }\n\n    loadMe() {\n        this.props.client\n            .query({\n                query: ME,\n            })\n            .then(({ data }) => {\n                // tslint:disable-next-line:no-console\n                console.log(data.me);\n                this.setState({ me: data.me });\n\n                if (data.me.completedProfile === 1) {\n                    this.props.history.replace('/add/profile');\n                } else if (data.me.completedProfile === 2) {\n                    this.props.history.replace('/add/interest');\n                }\n\n                this.setState({ avatar: data.me.avata.url });\n                // tslint:disable-next-line:no-console\n                console.log(this.state.avatar);\n            })\n            .catch((error) => {\n                // localStorage.removeItem(AUTH_TOKEN);\n                if (error) {\n                    // tslint:disable-next-line:no-console\n                    console.log('grooom');\n                    // this.setState({isAuthenticated: false});\n                    this.setState({ token: '' });\n                    this.setState({ expireToken: false });\n                }\n            });\n    }\n\n    render() {\n        const { isAuthenticated } = this.state;\n        // const userAuthed = token ? true : false;\n        // tslint:disable-next-line:no-console\n        console.log(isAuthenticated);\n\n        return (\n            <div className=\"uk-offcanvas-content bg-muted\" style={{ backgroundColor: '#e4e6eb' }}>\n                \n                <Helmet>\n                    <title>Unizonn</title>\n                    <meta name=\"an inclusive community\" content=\"Unizonn community\" />\n                </Helmet>\n                <PrivateHeader avatar={this.state.avatar} isAuthenticated={isAuthenticated} logout={this._logout} />\n                <Switch>\n                    <Route\n                        exact={true}\n                        path=\"/\"\n                        render={() =>\n                            isAuthenticated ? (\n                                <PrivateLayout component={Home} isAuthenticated={isAuthenticated} />\n                            ) : (\n                                <PublicLayout component={PublicHome} isAuthenticated={isAuthenticated} />\n                            )\n                        }\n                        // tslint:disable-next-line:jsx-alignment\n                    />\n                    <PrivateLayout component={Home} path=\"/home\" isAuthenticated={isAuthenticated} />\n                    <PublicLayout \n                      component={Login}\n                      refreshToken={this.refreshToken}\n                      path=\"/login\"\n                      isAuthenticated={isAuthenticated}  \n                    />\n                    <PublicLayout \n                      component={Login}\n                      exact={true}\n                      refreshToken={this.refreshToken}\n                      path=\"/login/:email\"\n                      isAuthenticated={isAuthenticated}  \n                    />\n                    <PublicLayout \n                      component={Signup}\n                      refreshToken={this.refreshToken}\n                      path=\"/signup\" \n                      isAuthenticated={isAuthenticated}  \n                    />\n                    <PublicLayout \n                      component={Signup}\n                      exact={true}\n                      refreshToken={this.refreshToken}\n                      path=\"/signup/:email\" \n                      isAuthenticated={isAuthenticated}  \n                    />\n                    <EmptyLayout component={FinishSignup} path=\"/signup/complete\" isAuthenticated={isAuthenticated} />\n                    <EmptyLayout \n                      exact={true} \n                      component={SignupProfile} \n                      path=\"/add/profile\" \n                      isAuthenticated={isAuthenticated}\n                    />\n                    <EmptyLayout \n                      path=\"/article/:slug\"\n                      isAuthenticated={isAuthenticated} \n                      component={ArticleDetail}\n                    />\n                    <EmptyLayout component={Interest} path=\"/add/interest\" isAuthenticated={isAuthenticated} />\n                    <EmptyLayout component={Maps} path=\"/library\" isAuthenticated={isAuthenticated} />\n                    <EmptyLayout component={Message} path=\"/message\" isAuthenticated={isAuthenticated} />\n                    <EmptyLayout component={Forum} path=\"/Forum\" isAuthenticated={isAuthenticated} />\n                    <EmptyLayout component={Compose} path=\"/write\" isAuthenticated={isAuthenticated} />\n                    <ProfileLayout component={Profile} path=\"/profile\" isAuthenticated={isAuthenticated}/>\n                    <ProfileLayout component={Profile} path=\"/profile/:id\" isAuthenticated={isAuthenticated}/>\n                    <Route component={NotFound} path=\"*\" />\n                    <PrivateLayout \n                      path=\"/logout\"\n                      isAuthenticated={isAuthenticated} \n                      render={() => this._logout()}  \n                    />\n                </Switch>\n                <SideBar />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(compose(withApollo)(App));\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Containers/App/index.tsx","import * as React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport { asyncComponent } from 'react-async-component';\r\nimport { LoadingComponent } from 'Components/EmptyStates';\r\nimport ThemeProvider from 'anchor-ui/theme-provider';\r\nimport SearchBox from 'anchor-ui/search-box';\r\nimport List from 'anchor-ui/list';\r\nimport ListItem from 'anchor-ui/list-item';\r\nimport ChannelHeader from 'anchor-ui/channel-header';\r\nimport Button from 'anchor-ui/button';\r\nimport IconChannels from 'anchor-ui/icons/icon-channels';\r\nimport IconPeople from 'anchor-ui/icons/icon-people';\r\nimport './style.css';\r\n// import { compose } from 'react-apollo';\r\n\r\nconst ChatDetail = asyncComponent({\r\n  resolve: () => System.import('../ChatDetail'),\r\n  LoadingComponent: () => <LoadingComponent />, // Optional\r\n  ErrorComponent: ({ error }) => <div>{error.message}</div> // Optional\r\n});\r\n\r\nconst items = [{\r\n  primaryText: 'Rex Raphael',\r\n  secondaryText: 'Been long brava',\r\n  image: 'http://www.ghgh.gh/hjh.png'\r\n}, {\r\n  primaryText: 'Rex Raphael',\r\n  secondaryText: 'Been long brava',\r\n  image: 'http://www.ghgh.gh/hjh.png'\r\n}, {\r\n  primaryText: 'Rex Raphael',\r\n  secondaryText: 'Been long brava',\r\n  image: 'http://www.ghgh.gh/hjh.png'\r\n}, {\r\n  primaryText: 'Rex Raphael',\r\n  secondaryText: 'Been long brava',\r\n  image: 'http://www.ghgh.gh/hjh.png'\r\n}, {\r\n  primaryText: 'Rex Raphael',\r\n  secondaryText: 'Been long brava',\r\n  image: 'http://www.ghgh.gh/hjh.png'\r\n}, {\r\n  primaryText: 'Rex Raphael',\r\n  secondaryText: 'Been long brava',\r\n  image: 'http://www.ghgh.gh/hjh.png'\r\n}, {\r\n  primaryText: 'Rex Raphael',\r\n  secondaryText: 'Been long brava',\r\n  image: 'http://www.ghgh.gh/hjh.png'\r\n}];\r\nexport default class Forum extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <ThemeProvider color=\"#f2912c\">\r\n        <div className=\"App\">\r\n          <Helmet>\r\n            <title>Unizonn | Forum</title>\r\n            <meta name=\"an inclusive community\" content=\"Unizonn community\" />\r\n          </Helmet>\r\n          <div \r\n            style={{height: '91vh', width: '100vw'}}\r\n            className=\"uk-width-1-1 uk-flex\"\r\n          >\r\n            <div id=\"chat-list\" className=\"uk-width-1-4 un-border-right\" style={{backgroundColor: '#ffffff'}}>\r\n              \r\n              <SearchBox placeholder=\"Search for channels and chat\" />\r\n              <List\r\n                id=\"chat-list\"\r\n\r\n                header=\"Channels\"\r\n                style={{height: '43.1vh'}}\r\n              >\r\n                {items.map((item, index) => (\r\n                  <ListItem\r\n                    key={index}\r\n                    primaryText={item.primaryText}\r\n                    avatar={item.image}\r\n                  />\r\n                ))}\r\n              </List>\r\n              <List\r\n                id=\"chat-list\"\r\n                header=\"Direct Chat\"\r\n                style={{height: '40vh'}}\r\n              >\r\n                {items.map((item, index) => (\r\n                  <ListItem\r\n                    key={index}\r\n                    primaryText={item.primaryText}\r\n                    secondaryText={item.secondaryText}\r\n                    avatar={item.image}\r\n                  />\r\n                ))}\r\n              </List>\r\n            </div>\r\n            <div className=\"uk-width-expand\">\r\n              <ChannelHeader\r\n                name=\"Channel\"\r\n                rightButton={\r\n                  // tslint:disable-next-line:jsx-boolean-value\r\n                  <Button iconButton>\r\n                    <IconPeople />\r\n                  </Button>\r\n                }\r\n                leftButton={\r\n                  // tslint:disable-next-line:jsx-boolean-value\r\n                  <Button iconButton>\r\n                    <IconChannels />\r\n                  </Button>\r\n                }\r\n              />\r\n              <div className=\"uk-width-1-1 uk-flex\" style={{}}>\r\n                <Route component={ChatDetail} exact={true} path=\"/forum/:id\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n/*\r\nexport default withRouter(compose(\r\n  withApollo,\r\n  graphql<Response, InputProps, Props>(GET_C, {\r\n    name: 'login'})\r\n)(Forum));*/\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Containers/Forum/index.tsx","//tslint:disable\r\nimport * as React from 'react';\r\nimport serialize from 'serialize-javascript';\r\n\r\nconst Html = ({ assets, markup, client: { cache }, asyncState }) => (\r\n  <html lang=\"en\">\r\n    <head>\r\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n      <meta charSet=\"utf-8\" />\r\n      <title>Unizonn</title>\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=yes\" />\r\n      <meta name=\"mobile-web-app-capable\" content=\"yes\" />\r\n              \r\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\" />\r\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\" />\r\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\" />\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n      <link rel=\"manifest\" href=\"/site.webmanifest\" />\r\n      <link rel=\"mask-icon\" href=\"/safari-pinned-tab.svg\" color=\"#5bbad5\" />\r\n      <meta name=\"msapplication-TileColor\" content=\"#da532c\" />\r\n      <meta name=\"theme-color\" content=\"teal\" />\r\n      <link href=\"https://fonts.googleapis.com/css?family=Poppins\" rel=\"stylesheet\" crossOrigin=\"anonymous\" />\r\n      <link href=\"https://fonts.googleapis.com/css?family=Roboto+Mono:400,500,700\" rel=\"stylesheet\" crossOrigin=\"anonymous\" />\r\n      <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" crossOrigin=\"anonymous\" />\r\n      <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/fonts/fontawesome-webfont.svg\" crossOrigin=\"anonymous\" />\r\n\r\n      {\r\n        assets.client.css\r\n          ? <link rel=\"stylesheet\" href={assets.client.css} />\r\n          : null\r\n      }\r\n      {\r\n        process.env.NODE_ENV === 'production'\r\n          ? <script src={assets.client.js} defer />\r\n          : <script src={assets.client.js} defer crossOrigin=\"anonymous\" />\r\n      }\r\n              \r\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/uikit/3.0.0-beta.40/js/uikit.min.js\" />\r\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/uikit/3.0.0-beta.40/js/uikit-icons.min.js\" />\r\n    </head>\r\n    <body>\r\n      <div id=\"root\">{markup}</div>\r\n      <script\r\n        charSet=\"UTF-8\"\r\n        dangerouslySetInnerHTML={{\r\n          __html: `,`,\r\n        }}\r\n      />\r\n      <script\r\n        charSet=\"UTF-8\"\r\n        dangerouslySetInnerHTML={{\r\n          __html: `window.__APOLLO_STATE__=${JSON.stringify(cache.extract())};`,\r\n        }}\r\n      />\r\n      <script\r\n        charSet=\"UTF-8\"\r\n        dangerouslySetInnerHTML={{\r\n          __html: `window.ASYNC_COMPONENT_STATE=${serialize(asyncState)};`,\r\n        }}\r\n      />\r\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/animejs/2.2.0/anime.min.js\" />\r\n      <script src=\"./js/lib/jquery.js\" />\r\n      <script src=\"./js/lib/bootstrap.min.js\" />\r\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.2/owl.carousel.min.js\" />\r\n      <script src=\"./js/lib/css3-animate-it.js\" />\r\n      <script src=\"./crack.js\" />\r\n      <script src=\"./timeago-in-words.js\" />\r\n      <script>\r\n        {\r\n        // tslint:disable-next-line:only-arrow-functions\r\n        /*function anima() {\r\n          [].slice.call(document.querySelectorAll('.grid--effect-vega > .grid__item')).forEach(function(stackEl) {\r\n            new VegaFx(stackEl);\r\n          });\r\n          [].slice.call(document.querySelectorAll('.grid--effect-castor > .grid__item')).forEach(function(stackEl) {\r\n            new CastorFx(stackEl);\r\n          });\r\n          [].slice.call(document.querySelectorAll('.grid--effect-hamal > .grid__item')).forEach(function(stackEl) {\r\n            new HamalFx(stackEl);\r\n          });\r\n          [].slice.call(document.querySelectorAll('.grid--effect-polaris > .grid__item')).forEach(function(stackEl) {\r\n            new PolarisFx(stackEl);\r\n          });\r\n          [].slice.call(document.querySelectorAll('.grid--effect-alphard > .grid__item')).forEach(function(stackEl) {\r\n            new AlphardFx(stackEl);\r\n          });\r\n          [].slice.call(document.querySelectorAll('.grid--effect-altair > .grid__item')).forEach(function(stackEl) {\r\n            new AltairFx(stackEl);\r\n          });\r\n          [].slice.call(document.querySelectorAll('.grid--effect-rigel > .grid__item')).forEach(function(stackEl) {\r\n            new RigelFx(stackEl);\r\n          });\r\n          [].slice.call(document.querySelectorAll('.grid--effect-canopus > .grid__item')).forEach(function(stackEl) {\r\n            new CanopusFx(stackEl);\r\n          });\r\n          [].slice.call(document.querySelectorAll('.grid--effect-pollux > .grid__item')).forEach(function(stackEl) {\r\n            new PolluxFx(stackEl);\r\n          });\r\n          [].slice.call(document.querySelectorAll('.grid--effect-deneb > .grid__item')).forEach(function(stackEl) {\r\n            new DenebFx(stackEl);\r\n          });\r\n        };*/\r\n        }\r\n      </script>\r\n      <script src=\"/static/bundle.js\" charSet=\"UTF-8\" />\r\n    </body>\r\n  </html>\r\n);\r\n\r\nexport default Html;\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Html.tsx","import * as express from 'express';\nimport * as React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport { StaticRouter } from 'react-router-dom';\n\nimport { getBundles } from 'react-loadable/webpack';\nimport { Capture } from 'react-loadable';\nimport stats from '../build/react-loadable.json';\nimport App from './Containers/App';\nimport { AsyncComponentProvider, createAsyncContext } from 'react-async-component';\nimport asyncBootstrapper from 'react-async-bootstrapper';\nimport 'isomorphic-unfetch';\nimport ApolloClient from 'apollo-client';\nimport { ApolloProvider, renderToStringWithData, getDataFromTree } from 'react-apollo';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport fetch from 'node-fetch';\n// import { createPersistedQueryLink } from 'apollo-link-persisted-queries';\nimport {\n  errorLink,\n  httpLinkAuth,\n  requestLink,\n  retryLink,\n  stateLink\n} from './link';\nimport Html from 'Html';\n\nconst links = [\n  errorLink,\n  retryLink,\n  stateLink,\n  httpLinkAuth\n];\n\nlet assets: any;\n\nString.prototype.truncString = function(this: string, add: string, max: number) {\n  add = add || '...';\n  return (this.length > max ? this.substring(0, max) + add : this);\n};\n\nString.prototype.lengthInMinutes = function(this: string) {\n  \n    const min = this.split(' ').length / 250;\n    if (min <= 0 || min === 0) {\n      return 'less than a minute read';\n    } else if (min <= 0.9 || min === 0.9) {\n      return 'less than a minute read';\n    } else {\n      return `${min} min read`;\n    }\n};\n\nconst syncLoadAssets = () => {\n    assets = require(process.env.RAZZLE_ASSETS_MANIFEST!);\n};\nsyncLoadAssets();\n\nconst server = express();\n\nserver\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR!))\n  .get('/*', (req: express.Request, res: express.Response) => {\n    \n    if (process.env.NODE_ENV === 'production') {\n      // links.unshift(createPersistedQueryLink());\n    }\n\n    const client = new ApolloClient({\n      ssrMode: true,\n      link: ApolloLink.from(links),\n      cache: new InMemoryCache(),\n    });\n    \n    const context = {} as any;\n    const modules = [] as any;\n    const asyncContext = createAsyncContext();\n    const markup = (\n      // tslint:disable-next-line:no-unused-expression\n      <AsyncComponentProvider asyncContext={asyncContext} >\n        <ApolloProvider client={client}>\n            <StaticRouter context={context} location={req.url}>\n              <App />\n            </StaticRouter>\n        </ApolloProvider>\n      </AsyncComponentProvider>\n    );\n\n    const bundles = getBundles(stats, modules);\n    const chunks = bundles.filter((bundle) => bundle.file.endsWith('.js'));\n\n    asyncBootstrapper(markup).then(() => {\n\n      const asyncState = asyncContext.getState();\n      renderToStringWithData(markup).then((content) => {\n        res.status(200);\n        const html = <Html assets={assets} markup={markup} client={client} asyncState={asyncState} />;\n        res.send(`<!doctype html>\\n${renderToString(html)}`);\n        res.end();\n      })\n      .catch((e) => {\n        console.error('RENDERING ERROR:', e); // eslint-disable-line no-console\n        /* res.status(500);\n        res.end(\n          `An error occurred. Please submit ane:\\n\\n${\n            e.stack\n          }`\n        );*/\n        res.status(200);\n        const html = <Html assets={assets} markup={markup} client={client} />;\n        res.send(`<!doctype html>\\n${renderToStaticMarkup(html)}`);\n        res.end();\n      });\n    });\n    \n  });\n\nexport default server;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/server.tsx","module.exports = require(\"react-async-bootstrapper\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-async-bootstrapper\"\n// module id = react-async-bootstrapper\n// module chunks = 0","module.exports = require(\"react-async-component\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-async-component\"\n// module id = react-async-component\n// module chunks = 0","module.exports = require(\"react-dom/server\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-dom/server\"\n// module id = react-dom/server\n// module chunks = 0","module.exports = require(\"react-loadable\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-loadable\"\n// module id = react-loadable\n// module chunks = 0","module.exports = require(\"serialize-javascript\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"serialize-javascript\"\n// module id = serialize-javascript\n// module chunks = 0"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAuBA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAqCA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAsHA;AA3KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAYA;AACA;AAMA;AAOA;AAMA;AAOA;AACA;AAMA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAGA;AACA;AAEA;;;;;;;;;ACtSA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AAcA;AAeA;AACA;AAGA;AACA;AACA;AAIA;AACA;AACA;AAIA;AACA;AAOA;AACA;AAAA;AAAA;AACA;;;;;AAKA;;;;;;;;;AChIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AAGA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAqCA;AAKA;;;;;;;;;AC7GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;;ACvHA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;A","sourceRoot":""}