# import Post from "./generated/prisma.graphql"

type Query {
  feed: [Post!]!
  articles: [Article!]!
  drafts: [Post!]!
  post(id: ID!): Post!
  me: User
  userExist(email: String!): Boolean!
  getCountry: [Country!]
  getInstitution(idCountry: ID!): [Institutions!]
  getDepartment(idInstitutions: ID!): [Department!]
  allInterest: [Interest!]!
  getChannelChat: [Channels!]!
  getDirectChat: [Channels!]!
  getAllChat: [Channels!]!
  getArticleById(id: ID!): Article!
  getArticleBySlug(slug: String!): Article!
  getMessages(channelId: ID!): [Message!]!
}

type Mutation {
  signup(email: String!, password: String!, username: String!, firstname: String!,
   lastname: String!, type: String!, gender: String! ): AuthPayload!
  addProfile(photoId: ID!, countryId: ID!, institutionId: ID!, departmentId: ID!): User!
  addInterest(interests: [String!]!): User!
  login(email: String!, password: String!): AuthPayload!
  createDraft(title: String!, text: String!): Post!
  createChannel(name: String!): Channels!
  createDirect(userId: ID!): Channels!
  publish(id: ID!): Post!
  createArticle(title: String, body: String, tags: [String!]!, category: [String!]!): Article!
  publishArticle(id: ID!): Article!
  likeArticle(id: ID!): Article!
  unLikeArticle(id: ID!): Article!
  commentArticle(articleId: ID, text: String!): Article!
  deletePost(id: ID!): Post!
}

type AuthPayload {
  token: String!
  user: User!
}