{"version":3,"file":"0.b96c1f68e804c36eb90d.hot-update.js","sources":["webpack:///./src/Components/ArticleList/index.tsx","webpack:///./src/Components/ConnectBox/index.tsx","webpack:///./src/Components/InputBoxLogin/index.tsx","webpack:///./src/Components/ProfileLeft/index.tsx","webpack:///./src/Components/TopInterest/index.tsx","webpack:///./src/Containers/App/index.tsx","webpack:///./src/Containers/ArticleDetail/index.tsx","webpack:///./src/Containers/Auth/Login/index.tsx","webpack:///./src/Containers/Auth/Signup/index.tsx","webpack:///./src/Containers/Auth/Signup/interest.tsx","webpack:///./src/Containers/Auth/Signup/signupProfile.tsx","webpack:///./src/Containers/ComposeArticle/index.tsx","webpack:///./src/server.tsx","webpack:///external \"react-apollo\""],"sourcesContent":["import * as React from 'react';\nimport ArticleItem from 'Components/ArticleItem';\nimport { graphql, QueryProps } from 'react-apollo';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { ErrorComponent, LoadingComponent } from 'Components/EmptyStates';\nimport { ARTICLES } from 'Graphql/Query';\nimport { Article } from 'CustomTypings/schema';\nimport ContentLoader from 'react-content-loader';\n\n// const MyFacebookLoader = () => <Facebook />;\n\nconst MyLoader = () => (\n    <ContentLoader height={200} width={400} speed={2} primaryColor={'#f3f3f3'} secondaryColor={'#ecebeb'}>\n        <rect x=\"70\" y=\"15\" rx=\"4\" ry=\"4\" width=\"117\" height=\"6.4\" />\n        <rect x=\"70\" y=\"35\" rx=\"3\" ry=\"3\" width=\"85\" height=\"6.4\" />\n        <rect x=\"1\" y=\"136\" rx=\"3\" ry=\"3\" width=\"350\" height=\"6.4\" />\n        <rect x=\"-1\" y=\"118\" rx=\"3\" ry=\"3\" width=\"380\" height=\"6.4\" />\n        <rect x=\"0\" y=\"150\" rx=\"3\" ry=\"3\" width=\"201\" height=\"6.4\" />\n        <circle cx=\"30\" cy=\"30\" r=\"30\" />\n        <rect x=\"-0.5\" y=\"70.27\" rx=\"0\" ry=\"0\" width=\"348\" height=\"16\" />\n        <rect x=\"1.5\" y=\"89.27\" rx=\"0\" ry=\"0\" width=\"217\" height=\"12\" />\n        <rect x=\"2.5\" y=\"175\" rx=\"0\" ry=\"0\" width=\"61\" height=\"18\" />\n        <rect x=\"72.5\" y=\"175\" rx=\"0\" ry=\"0\" width=\"55\" height=\"18\" />\n        <rect x=\"136.5\" y=\"175.27\" rx=\"0\" ry=\"0\" width=\"56\" height=\"18\" />\n        <rect x=\"358.5\" y=\"177.27\" rx=\"0\" ry=\"0\" width=\"25\" height=\"16\" />\n        <rect x=\"325.5\" y=\"177.27\" rx=\"0\" ry=\"0\" width=\"23\" height=\"16\" />\n    </ContentLoader>\n);\n\ninterface Response {\n    articles: Article[];\n}\n\ntype WrappedProps = Response & QueryProps;\n\nconst ArticleList = graphql<Response, {}, WrappedProps>(ARTICLES, {\n    props: ({ data }) => ({ ...data }),\n});\n\nexport default ArticleList(({ loading, articles, error }) => {\n    // tslint:disable-next-line:jsx-wrap-multiline\n    if (loading) {\n        return <LoadingComponent />;\n    }\n    if (error) {\n        return <ErrorComponent />;\n    }\n    return (\n        <InfiniteScroll\n            pageStart={0}\n            hasMore={true || false}\n            loader={\n                <div className=\"uk-padding-small\" style={{ backgroundColor: '#fff' }}>\n                    <MyLoader />\n                </div>\n            // tslint:disable-next-line:jsx-curly-spacing\n            }\n        >\n            {articles.map((article) => (\n                <div key={article.id}>\n                    <ArticleItem article={article} />\n                </div>\n            ))}\n        </InfiniteScroll>\n    );\n});\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Components/ArticleList/index.tsx","import * as React from 'react';\nimport { graphql, QueryProps } from 'react-apollo';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { ErrorComponent, LoadingComponent } from 'Components/EmptyStates';\nimport { ARTICLES } from 'Graphql/Query';\nimport { Article } from 'CustomTypings/schema';\nimport PersonItem from 'Components/PersonItem';\nimport Label from 'Components/Label';\n\ninterface Response {\n    articles: Article[];\n}\n\ntype WrappedProps = Response & QueryProps;\n\nconst ConnectBox = graphql<Response, {}, WrappedProps>(ARTICLES, {\n    props: ({ data }) => ({ ...data }),\n});\n\nexport default ConnectBox(({ loading, articles, error, refetch }) => {\n    if (loading) {\n        return <LoadingComponent />;\n    }\n    if (error) {\n        return <ErrorComponent refresh={refetch} />;\n    }\n    return (\n        <div className=\"uk-card person\">\n            <Label text=\"Suggested Connection\" />\n            <InfiniteScroll pageStart={0} hasMore={false}>\n                {articles.map((article, i) => (\n                    <div key={article.id} className=\"box\">\n                        <PersonItem\n                            // tslint:disable-next-line:max-line-length\n                            url={\n                                // tslint:disable-next-line:max-line-length\n                                'data:image/svg+xml;utf8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IS0tIEdlbmVyYXRvcjogQWRvYmUgSWxsdXN0cmF0b3IgMTkuMC4wLCBTVkcgRXhwb3J0IFBsdWctSW4gLiBTVkcgVmVyc2lvbjogNi4wMCBCdWlsZCAwKSAgLS0+CjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeD0iMHB4IiB5PSIwcHgiIHZpZXdCb3g9IjAgMCA1MTIgNTEyIiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MTIgNTEyOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSIgd2lkdGg9IjUxMnB4IiBoZWlnaHQ9IjUxMnB4Ij4KPGNpcmNsZSBzdHlsZT0iZmlsbDojNzFFMkVGOyIgY3g9IjI1NiIgY3k9IjI1NiIgcj0iMjU2Ii8+CjxwYXRoIHN0eWxlPSJmaWxsOiMzOEM2RDk7IiBkPSJNMjI1LjcyNiw0MzkuNTQ2bDY5LjQ2OCw2OS40NjhDNDE3Ljk3NSw0OTAuMTUxLDUxMiwzODQuMDU3LDUxMiwyNTYgIGMwLTAuNjgxLTAuMDIxLTEuMzU4LTAuMDI2LTIuMDM4TDM1OC44NiwxMDAuODQ4TDIyNS43MjYsNDM5LjU0NnoiLz4KPHJlY3QgeD0iMjEzLjMzMyIgeT0iMjkyLjIxOSIgc3R5bGU9ImZpbGw6I0ZDRDA4ODsiIHdpZHRoPSI4NS4zMzMiIGhlaWdodD0iODUuMzMzIi8+CjxyZWN0IHg9IjI1Ni4yOTMiIHk9IjI5Mi4yMTkiIHN0eWxlPSJmaWxsOiNEREFCNjI7IiB3aWR0aD0iNDIuMzc5IiBoZWlnaHQ9Ijg1LjMzMyIvPgo8cGF0aCBzdHlsZT0iZmlsbDojRDlFREVDOyIgZD0iTTM1Ny43NjQsMzYwLjVsLTQ1LjIyLTkuMDQ0bC03Ljk5Mi0xMS42NjZjLTEuNDk2LTIuMTg0LTQuMzI3LTMuMDA3LTYuNzU5LTEuOTY1TDI1NiwzNTUuODMgIGwtNDEuNTQzLTE3Ljk4N2MtMi40MTUtMS4wNTMtNS4yMzktMC4yNjItNi43NTQsMS44OTNsLTguMjQ3LDExLjcxOWwtNDUuMjIsOS4wNDRjLTIzLjAyNCw0LjYwNi0zOS41OTYsMjQuODIxLTM5LjU5Niw0OC4zdjYwLjY0NyAgQzE1NS4xNDgsNDk2LjMyOCwyMDMuNzQsNTEyLDI1Niw1MTJzMTAwLjg1Mi0xNS42NzIsMTQxLjM2LTQyLjU1NXYtNjAuNjQ3QzM5Ny4zNiwzODUuMzE5LDM4MC43ODcsMzY1LjEwNCwzNTcuNzY0LDM2MC41eiIvPgo8cGF0aCBzdHlsZT0iZmlsbDojQzdEOEQ3OyIgZD0iTTM5Ny4zNiw0MDguNzk4YzAtMjMuNDgtMTYuNTc0LTQzLjY5Ni0zOS41OTYtNDguM2wtNDUuMjItOS4wNDRsLTcuOTkyLTExLjY2NiAgYy0xLjQ5Ni0yLjE4NC00LjMyNy0zLjAwNy02Ljc1OS0xLjk2NWwtNDEuNTAzLDE3Ljg4djE1Ni4yODljNTIuMTQ4LTAuMDU3LDEwMC42MzgtMTUuNzE3LDE0MS4wNzItNDIuNTQ5di02MC42NDVIMzk3LjM2eiIvPgo8cGF0aCBzdHlsZT0iZmlsbDojRkZFREI1OyIgZD0iTTM0Ny41MzEsMjA1LjQ0YzAuNDU5LTQuMjQ0LDAuNjk4LTguNDI4LDAuNjk4LTEyLjUwOWMwLTUzLjk3NC00MS4yOTMtOTcuNzI4LTkyLjIyOS05Ny43MjggIHMtOTIuMjI5LDQzLjc1My05Mi4yMjksOTcuNzI4YzAsNC4wOCwwLjI0LDguMjY0LDAuNjk4LDEyLjUwOWMtOC45NDUsMi4zMjYtMTMuMjAyLDE2LjA4Ny05LjUwNiwzMC44MTcgIGMzLjcwOCwxNC43NzYsMTQuMDE0LDI0LjkyMSwyMy4wMTgsMjIuNjYxYzAuODIxLTAuMjA1LDEuNTg2LTAuNTM4LDIuMzI2LTAuOTI3YzE2LjY2NywzMy40NTIsNDQuMzUxLDYwLjU5NCw3NS42OTMsNjAuNTk0ICBzNTkuMDI3LTI3LjEzOSw3NS42OTMtNjAuNTk0YzAuNzQsMC4zOSwxLjUwNSwwLjcyMiwyLjMyNiwwLjkyN2M5LjAwNCwyLjI2LDE5LjMwOS03Ljg4NSwyMy4wMTgtMjIuNjYxICBDMzYwLjczMiwyMjEuNTI3LDM1Ni40NzYsMjA3Ljc2MywzNDcuNTMxLDIwNS40NHoiLz4KPHBhdGggc3R5bGU9ImZpbGw6I0U4Q0Y4OTsiIGQ9Ik0zNDcuNTMxLDIwNS40NGMwLjQ1OS00LjI0NCwwLjY5OC04LjQyOCwwLjY5OC0xMi41MDljMC01My44NzItNDEuMTM4LTk3LjU1Ni05MS45NDEtOTcuNzIxdjIyMy4zNjUgIGMzMS4yMjMtMC4xNjcsNTguNzktMjcuMjM2LDc1LjQwNS02MC41ODVjMC43NCwwLjM5LDEuNTA1LDAuNzIyLDIuMzI2LDAuOTI3YzkuMDA0LDIuMjYsMTkuMzA5LTcuODg1LDIzLjAxOC0yMi42NjEgIEMzNjAuNzMyLDIyMS41MjcsMzU2LjQ3NiwyMDcuNzYzLDM0Ny41MzEsMjA1LjQ0eiIvPgo8cGF0aCBzdHlsZT0iZmlsbDojNDk0OTQ4OyIgZD0iTTIwNC4xNCwxNzAuNjY3YzAsMCw0MC4wODEsMzguMzU3LDEyMS45NjYsMjQuNTY2YzAsMCw3Ljk0LTEuOTk4LDIxLjQyNSwxMC4yMDcgIGMwLDAsMjQuNjkxLTUxLjU4MSwxMS4zMzEtMTA0LjU5MWMwLDAtNDMuNTI5LDUuNjAzLTYyLjkyMy02LjQ2NWMtMTkuMzk0LTEyLjA2Ny03MS4xMTEtMjQuOTk3LTgyLjc0NywxMS4yMDUgIGMwLDAtMzcuNDk1LTQuNzQxLTQ3LjgzOCwzNC4wNDdjLTEwLjM0MywzOC43ODgtMC44ODMsNjUuODAzLTAuODgzLDY1LjgwM1MxODMuODg0LDE1OC41OTksMjA0LjE0LDE3MC42Njd6Ii8+CjxnPgoJPHBhdGggc3R5bGU9ImZpbGw6IzMzMzMzMzsiIGQ9Ik0zNTguODYsMTAwLjg0OGMwLDAtNDMuNTI5LDUuNjAzLTYyLjkyMy02LjQ2NWMtOC44MDktNS40ODItMjQuMjg4LTExLjEyNC0zOS42NS0xMi4yNzZ2MTEyLjUwOSAgIGMxOC4zNTgsMy45MjcsNDEuNjA1LDUuMzY4LDY5LjgxOCwwLjYxNWMwLDAsNy45NC0xLjk5OCwyMS40MjUsMTAuMjA3QzM0Ny41MzEsMjA1LjQ0LDM3Mi4yMjEsMTUzLjg1OSwzNTguODYsMTAwLjg0OHoiLz4KCTxwYXRoIHN0eWxlPSJmaWxsOiMzMzMzMzM7IiBkPSJNMjY3LjkxLDUxMS42OTdjMzAuNDg0LTEuMzk4LDU5LjU2NC04LjEzNSw4Ni4zNTQtMTkuMjg3VjM1OS44bC0zNC45MDctNi45ODJMMjY3LjkxLDUxMS42OTd6Ii8+CjwvZz4KPGc+Cgk8cGF0aCBzdHlsZT0iZmlsbDojNDk0OTQ4OyIgZD0iTTI0NC4wOSw1MTEuNjk3Yy0zMC40ODQtMS4zOTgtNTkuNTY0LTguMTM1LTg2LjM1NC0xOS4yODdWMzU5LjhsMzQuOTA3LTYuOTgyTDI0NC4wOSw1MTEuNjk3eiIvPgoJPHBhdGggc3R5bGU9ImZpbGw6IzQ5NDk0ODsiIGQ9Ik0yOTAuMjQ1LDM1NS45MjRsLTI0LjA2MSw4LjgxNGMtMC4zOTgtMS4yNDUtMS41NTItMi4xNTEtMi45MjktMi4xNTFoLTEzLjY0OCAgIGMtMS4zNywwLTIuNTIsMC45LTIuOTI0LDIuMTM2bC0yNC4wMTctOC43OTljLTQuMTYtMS41MjQtOC41NjYsMS41NTUtOC41NjYsNS45ODV2MzAuMzk2YzAsNC40MjksNC40MDYsNy41MDksOC41NjYsNS45ODUgICBsMjQuMDE3LTguNzk5YzAuNDAzLDEuMjM2LDEuNTUyLDIuMTM2LDIuOTI0LDIuMTM2aDEzLjY0OGMxLjM3NywwLDIuNTI5LTAuOTA3LDIuOTI5LTIuMTUxbDI0LjA2MSw4LjgxNCAgIGM0LjE2LDEuNTI0LDguNTY2LTEuNTU1LDguNTY2LTUuOTg1VjM2MS45MUMyOTguODExLDM1Ny40NzksMjk0LjQwNSwzNTQuNDAxLDI5MC4yNDUsMzU1LjkyNHoiLz4KPC9nPgo8cGF0aCBzdHlsZT0iZmlsbDojMzMzMzMzOyIgZD0iTTI5MC4yNDUsMzU1LjkyNGwtMjQuMDYxLDguODE0Yy0wLjM5OC0xLjI0NS0xLjU1Mi0yLjE1MS0yLjkyOS0yLjE1MWgtNi45Njh2MjkuMDQxaDYuOTY4ICBjMS4zNzcsMCwyLjUyOS0wLjkwNywyLjkyOS0yLjE1MWwyNC4wNjEsOC44MTRjNC4xNiwxLjUyNCw4LjU2Ni0xLjU1NSw4LjU2Ni01Ljk4NVYzNjEuOTEgIEMyOTguODExLDM1Ny40NzksMjk0LjQwNSwzNTQuNDAxLDI5MC4yNDUsMzU1LjkyNHoiLz4KPGc+Cgk8Y2lyY2xlIHN0eWxlPSJmaWxsOiNBREFEQUQ7IiBjeD0iMjU2IiBjeT0iNDEwLjI5IiByPSI0LjMxIi8+Cgk8Y2lyY2xlIHN0eWxlPSJmaWxsOiNBREFEQUQ7IiBjeD0iMjU2IiBjeT0iNDMzLjEzMSIgcj0iNC4zMSIvPgoJPGNpcmNsZSBzdHlsZT0iZmlsbDojQURBREFEOyIgY3g9IjI1NiIgY3k9IjQ1NS45NzMiIHI9IjQuMzEiLz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8L3N2Zz4K'\n                            }\n                            name={`${article.author.firstname} ${article.author.lastname}`}\n                        />\n                    </div>\n                ))}\n            </InfiniteScroll>\n        </div>\n    );\n});\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Components/ConnectBox/index.tsx","import * as React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { compose, graphql, withApollo } from 'react-apollo';\nimport { ChildProps } from 'react-apollo/types';\nimport { USER_EXIST } from 'Graphql/Query';\n\n// import { Link } from 'react-router-dom';\n\ninterface Props {\n    // tslint:disable-next-line:no-any\n    userExist: any;\n    // tslint:disable-next-line:no-any\n    client?: any;\n}\n\ninterface InputProps {\n    email: string;\n}\n\n// tslint:disable-next-line:no-any\nclass InputBoxLogin extends React.Component<RouteComponentProps & Props & ChildProps<boolean, InputProps>, {}> {\n    state = {\n        text: '',\n        loading: false,\n    };\n\n    checkUser = (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        this.props.client\n            .query({\n                query: USER_EXIST,\n                variables: {\n                    email: this.state.text,\n                },\n            })\n            .then(({ data }) => {\n                data.userExist\n                    ? this.props.history.push({\n                          pathname: '/login',\n                          email: this.state.text,\n                      })\n                    : this.props.history.push({\n                          pathname: '/signup',\n                          email: this.state.text,\n                      });\n                this.setState({ loading: false });\n            })\n            .catch((error) => {\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n        const { loading } = this.state;\n        return (\n            <div className=\"\">\n                <h1 className=\"uk-heading-primary uk-text-bold uk-text-uppercase\">unizonn</h1>\n                <p className=\" uk-text-center uk-margin uk-text-bold\">\n                    Friendly and inclusive community for students and academia\n                </p>\n                <div className=\"uk-flex-stretch\">\n                    <form\n                        onSubmit={this.checkUser}\n                        className=\"uk-margin uk-flex-stretch\"\n                        // tslint:disable-next-line:jsx-boolean-value\n                        uk-margin\n                    >\n                        <div\n                            className=\"uk-margin uk-flex uk-width-1-1\"\n                            // tslint:disable-next-line:jsx-boolean-value\n                            uk-margin\n                        >\n                            <div uk-form-custom=\"target: true\" className=\"uk-width-3-4@m uk-width-1-1@s\">\n                                <input\n                                    type=\"email\"\n                                    onChange={(e) => this.setState({ text: e.target.value })}\n                                    value={this.state.text}\n                                    required={true}\n                                    className=\"uk-input uk-box-shadow-hover-small uk-responsive-width uk-form-large\"\n                                    placeholder=\"Enter email to signin or signup\"\n                                />\n                            </div>\n                            <div className=\"uk-width-1-4@m uk-width-1-1@s\">\n                                {loading ? (\n                                    <div data-uk-spinner=\"ratio: 1\" style={{ marginLeft: 15, color: 'green' }} />\n                                ) : (\n                                    <button className=\"uk-button uk-button-primary uk-button-large\" type=\"submit\">\n                                        GETSTARTED\n                                    </button>\n                                )}\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(\n    compose(\n        withApollo,\n        graphql<boolean, InputProps, Props>(USER_EXIST, {\n            name: 'userExist',\n            options: { variables: { email: '' } },\n        }),\n    )(InputBoxLogin),\n);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Components/InputBoxLogin/index.tsx","import * as React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { compose, graphql, withApollo } from 'react-apollo';\nimport { ChildProps } from 'react-apollo/types';\nimport { USER_EXIST } from 'Graphql/Query';\nimport { User } from 'CustomTypings/schema';\n\n// import { Link } from 'react-router-dom';\n\ninterface Props {\n    // tslint:disable-next-line:no-any\n    client?: any;\n    user?: User;\n}\n\ninterface InputProps {\n    userId: string;\n}\n\ninterface Response {\n    user?: User;\n}\n\n// tslint:disable-next-line:no-any\nclass ProfileLeft extends React.Component<RouteComponentProps & Props & ChildProps<Response, InputProps>, {}> {\n    state = {\n        text: '',\n        loading: false,\n    };\n\n    checkUser = (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        this.props.client\n            .query({\n                query: USER_EXIST,\n                variables: {\n                    email: this.state.text,\n                },\n            })\n            .then(({ data }) => {\n                data.userExist\n                    ? this.props.history.push({\n                          pathname: '/login',\n                          email: this.state.text,\n                      })\n                    : this.props.history.push({\n                          pathname: '/signup',\n                          email: this.state.text,\n                      });\n                this.setState({ loading: false });\n            })\n            .catch((error) => {\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n        // const { loading } = this.state;\n        return (\n            <div>\n                <div className=\"uk-card uk-card-default uk-width-1-1\">\n                    <h1>Rex Raphael</h1>\n                    <h1>21 Connections</h1>\n                    <p>Xfullstack Engineer, Dev Ops Manager, with great love for javascript and nodejs</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(\n    compose(\n        withApollo,\n        graphql<Response, InputProps, Props>(USER_EXIST, {\n            name: 'user',\n            options: { variables: { email: '' } },\n        }),\n    )(ProfileLeft),\n);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Components/ProfileLeft/index.tsx","import * as React from 'react';\nimport InterestItemSlim from 'Components/InterestItemSlim';\nimport { graphql, QueryProps } from 'react-apollo';\nimport { ErrorComponent, LoadingComponent } from 'Components/EmptyStates';\nimport { Interest } from 'CustomTypings/schema';\nimport { ALL_INTEREST } from 'Graphql/Query';\n\ninterface Response {\n    allInterest: Interest[];\n}\n\ntype WrappedProps = Response & QueryProps;\n\nconst TopInterest = graphql<Response, {}, WrappedProps>(ALL_INTEREST, {\n    props: ({ data }) => ({ ...data }),\n});\n\nexport default TopInterest(({ loading, allInterest, error }) => {\n    if (loading) {\n        return <LoadingComponent />;\n    }\n    if (error) {\n        return <ErrorComponent />;\n    }\n    return (\n        <div className=\"tags-wrapper undefined\">\n            {allInterest.map((interest, i) => (\n                <InterestItemSlim key={interest.id} url={interest.avatar} name={interest.name} />\n            ))}\n        </div>\n    );\n});\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Components/TopInterest/index.tsx","import * as React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { CookiesProvider, CookieBannerUniversal } from 'react-cookie-banner';\nimport { Helmet } from 'react-helmet';\nimport { withApollo, graphql, compose, ChildProps } from 'react-apollo';\nimport Loadable from 'react-loadable';\nimport { PublicLayout, PrivateLayout, EmptyLayout, ProfileLayout } from 'Components/Layouts/MainLayout';\nimport { isTokenExpired } from 'Utils/jwtHelper';\nimport { AUTH_TOKEN } from '../../constants';\nimport { PrivateHeader } from 'Components/Layouts/Header';\nimport LoadingComponent from 'Components/Loading';\nimport SideBar from 'Components/Layouts/SideBar';\nimport { User } from 'CustomTypings/schema';\nimport { ME } from 'Graphql/Query';\nimport 'Theme/application.scss';\nimport './style.scss';\n// import { cookies } from '../../link';\n\nconst Home = Loadable({\n  loader: () => import('Containers/Home'),\n  loading: () => <LoadingComponent />,\n});\n\nconst NotFound = Loadable({\n  loader: () => import('Containers/NotFound'),\n  loading: () => <LoadingComponent />,\n});\n\nconst Profile = Loadable({\n  loader: () => import('Containers/Profile'),\n  loading: () => <LoadingComponent />,\n});\n\nconst PublicHome = Loadable({\n  loader: () => import('Containers/HomePublic'),\n  loading: () => <LoadingComponent />,\n});\nconst Login = Loadable({\n  loader: () => import('Containers/Auth/Login'),\n  loading: () => <LoadingComponent />,\n});\n\nconst Signup = Loadable({\n  loader: () => import('Containers/Auth/Signup'),\n  loading: () => <LoadingComponent />,\n});\nconst ArticleDetail = Loadable({\n  loader: () => import('Containers/ArticleDetail'),\n  loading: () => <LoadingComponent />,\n});\n\nconst Interest = Loadable({\n  loader: () => import('Containers/Auth/Signup/interest'),\n  loading: () => <LoadingComponent />,\n});\nconst Maps = Loadable({\n  loader: () => import('Containers/Maps'),\n  loading: () => <LoadingComponent />,\n});\n\nconst Compose = Loadable({\n  loader: () => import('Containers/ComposeArticle'),\n  loading: () => <LoadingComponent />,\n});\n\nconst Message = Loadable({\n  loader: () => import('Containers/Message'),\n  loading: () => <LoadingComponent />,\n});\n\nconst Forum = Loadable({\n  loader: () => import('Containers/Forum'),\n  loading: () => <LoadingComponent />,\n});\n\nconst FinishSignup = Loadable({\n  loader: () => import('Containers/Auth/Signup/finishSignup'),\n  loading: () => <LoadingComponent />,\n});\n\nconst SignupProfile = Loadable({\n  loader: () => import('Containers/Auth/Signup/signupProfile'),\n  loading: () => <LoadingComponent />,\n});\n\ninterface Props {\n    // tslint:disable-next-line:no-any\n    client?: any;\n    // tslint:disable-next-line:no-any\n    history?: any;\n    // tslint:disable-next-line:no-any\n    allInterest: any;\n}\n\ninterface Response {\n    me: User;\n}\n\ninterface State {\n    isAuthenticated: boolean;\n    token: string;\n    expireToken: boolean;\n    me: object;\n    avatar: string;\n}\n\nclass App extends React.Component<Props & ChildProps<Response, {}>, State> {\n    state = {\n        isAuthenticated: false,\n        token: '',\n        expireToken: false,\n        avatar: '',\n        me: {\n            id: '',\n            firstname: '',\n            lastname: '',\n            email: '',\n        },\n    };\n\n    componentWillMount() {\n      this.props.client.query({\n        query: ME\n      }).then((res) => {\n        // dhjhj\n      });\n        /*const token = cookies.get(AUTH_TOKEN);\n        cookies.set('test', 'a', {\n          expires: new Date(2020-05-04),\n          path: '/api',\n          domain: '*.example.com',\n          secure: true\n        });\n        if (token !== null && token !== undefined) {\n            const expired = isTokenExpired(token);\n            if (!expired) {\n                this.setState({ isAuthenticated: true });\n                this.setState({ token });\n                this.setState({ expireToken: expired });\n                this.loadMe();\n            } else {\n                cookies.remove(AUTH_TOKEN, '', -1);\n                this.setState({ isAuthenticated: false });\n                this.setState({ token: '' });\n                this.setState({ expireToken: false });\n            }\n        }*/\n    }\n\n    componentDidMount() {\n        // this.props.\n        // tslint:disable-next-line:no-console\n        console.log(this.props.me);\n    }\n\n    refreshToken = (token: string) => {\n        this.setState({\n            token,\n        });\n\n        if (token !== '' && token !== undefined) {\n            this.setState({\n                isAuthenticated: true,\n            });\n            // this.loadMe();\n        }\n    }\n\n    _logout = () => {\n        // localStorage.removeItem(AUTH_TOKEN);\n        this.setState({ isAuthenticated: false });\n        this.setState({ token: '' });\n        this.setState({ expireToken: false });\n    }\n\n    loadMe() {\n        this.props.client\n            .query({\n                query: ME,\n            })\n            .then(({ data }) => {\n                // tslint:disable-next-line:no-console\n                console.log(data.me);\n                this.setState({ me: data.me });\n\n                if (data.me.completedProfile === 1) {\n                    this.props.history.replace('/add/profile');\n                } else if (data.me.completedProfile === 2) {\n                    this.props.history.replace('/add/interest');\n                }\n\n                this.setState({ avatar: data.me.avata.url });\n                // tslint:disable-next-line:no-console\n                console.log(this.state.avatar);\n            })\n            .catch((error) => {\n                // localStorage.removeItem(AUTH_TOKEN);\n                if (error) {\n                    // tslint:disable-next-line:no-console\n                    console.log('grooom');\n                    // this.setState({isAuthenticated: false});\n                    this.setState({ token: '' });\n                    this.setState({ expireToken: false });\n                }\n            });\n    }\n\n    render() {\n        const { isAuthenticated } = this.state;\n        // const userAuthed = token ? true : false;\n        // tslint:disable-next-line:no-console\n        console.log(isAuthenticated);\n\n        return (\n            <div className=\"uk-offcanvas-content bg-muted\" style={{ minHeight: '40vh', backgroundColor: '#e4e6eb' }}>\n                \n                <Helmet>\n                    <title>Unizonn</title>\n                    <meta name=\"an inclusive community\" content=\"Unizonn community\" />\n                </Helmet>\n                <PrivateHeader avatar={this.state.avatar} isAuthenticated={isAuthenticated} logout={this._logout} />\n                <Switch>\n                    <Route\n                        exact={true}\n                        path=\"/\"\n                        render={() =>\n                            isAuthenticated ? (\n                                <PrivateLayout component={Home} isAuthenticated={isAuthenticated} />\n                            ) : (\n                                <PublicLayout component={PublicHome} isAuthenticated={isAuthenticated} />\n                            )\n                        }\n                        // tslint:disable-next-line:jsx-alignment\n                    />\n                    <PrivateLayout component={Home} path=\"/home\" isAuthenticated={isAuthenticated} />\n                    <PublicLayout \n                      component={Login}\n                      refreshToken={this.refreshToken}\n                      path=\"/login\"\n                      isAuthenticated={isAuthenticated}  \n                    />\n                    <PublicLayout \n                      component={Login}\n                      exact={true}\n                      refreshToken={this.refreshToken}\n                      path=\"/login/:email\"\n                      isAuthenticated={isAuthenticated}  \n                    />\n                    <PublicLayout \n                      component={Signup}\n                      refreshToken={this.refreshToken}\n                      path=\"/signup\" \n                      isAuthenticated={isAuthenticated}  \n                    />\n                    <PublicLayout \n                      component={Signup}\n                      exact={true}\n                      refreshToken={this.refreshToken}\n                      path=\"/signup/:email\" \n                      isAuthenticated={isAuthenticated}  \n                    />\n                    <EmptyLayout component={FinishSignup} path=\"/signup/complete\" isAuthenticated={isAuthenticated} />\n                    <EmptyLayout \n                      exact={true} \n                      component={SignupProfile} \n                      path=\"/add/profile\" \n                      isAuthenticated={isAuthenticated}\n                    />\n                    <EmptyLayout \n                      path=\"/article/:slug\"\n                      isAuthenticated={isAuthenticated} \n                      component={ArticleDetail}\n                    />\n                    <EmptyLayout component={Interest} path=\"/add/interest\" isAuthenticated={isAuthenticated} />\n                    <EmptyLayout component={Maps} path=\"/library\" isAuthenticated={isAuthenticated} />\n                    <EmptyLayout component={Message} path=\"/message\" isAuthenticated={isAuthenticated} />\n                    <EmptyLayout component={Forum} path=\"/Forum\" isAuthenticated={isAuthenticated} />\n                    <EmptyLayout component={Compose} path=\"/write\" isAuthenticated={isAuthenticated} />\n                    <ProfileLayout component={Profile} path=\"/profile\" isAuthenticated={isAuthenticated}/>\n                    <ProfileLayout component={Profile} path=\"/profile/:id\" isAuthenticated={isAuthenticated}/>\n                    <Route component={NotFound} path=\"*\" />\n                    <PrivateLayout \n                      path=\"/logout\"\n                      isAuthenticated={isAuthenticated} \n                      render={() => this._logout()}  \n                    />\n                </Switch>\n                <SideBar />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(compose(withApollo)(App));\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Containers/App/index.tsx","import * as React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { compose, withApollo } from 'react-apollo';\n// import { Helmet } from 'react-helmet';\nimport { Article } from 'CustomTypings/schema';\nimport Avatar from 'Components/Avatar';\nimport ArticleItem from 'Components/ArticleItem';\nimport CommentEditor from 'Components/CommentEditor';\nimport TopInterest from 'Components/TopInterest';\nimport Likebutton from 'Components/LikeButton';\nimport PopoverLink from 'Components/PopoverLink';\nimport TimeAgo from 'react-timeago';\nimport './style.css';\nimport { GET_ARTICLE_BY_ID } from 'Graphql/Query';\nimport Label from 'Components/Label';\n\ninterface Props {\n    // tslint:disable-next-line:no-any\n    client?: any;\n}\n\nclass ArticleDetail extends React.Component<RouteComponentProps & Props> {\n    state = {\n        // tslint:disable-next-line:no-object-literal-type-assertion\n        currentArticle: {} as Article,\n        loading: true,\n    };\n\n    componentWillMount() {\n        const { match: { params } } = this.props;\n        // tslint:disable-next-line:no-console\n        console.log(params);\n        if (params.slug) {\n            this.fetchArticleandOthers(params.slug);\n        } else {\n            this.props.history.goBack();\n        }\n    }\n    // tslint:disable-next-line:typedef\n    componentDidUpdate(prevProps) {\n        // tslint:disable-next-line:no-console\n        console.log(prevProps);\n        const oldId = prevProps.match.params.slug;\n        const newId = this.props.match.params.slug;\n        // tslint:disable-next-line:no-console\n        console.log(oldId);\n        if (newId !== oldId) {\n            this.fetchArticleandOthers(oldId);\n        }\n    }\n\n    fetchArticleandOthers(slugOrId: string) {\n        this.props.client\n            .query({\n                query: GET_ARTICLE_BY_ID,\n                variables: {\n                    id: slugOrId,\n                },\n            })\n            .then((result) => {\n                // tslint:disable-next-line:no-console\n                console.log(result.data.getArticleById);\n                this.setState({ currentArticle: result.data.getArticleById, loading: false });\n            })\n            .catch((err) => {\n                // tslint:disable-next-line:no-console\n                console.log(err);\n                this.props.history.replace('/not-found');\n            });\n    }\n\n    componentWillUnmount() {\n        // allows us to ignore\n    }\n\n    renderArticle(article: Article) {\n        const { author } = article;\n        return (\n            <div\n                className=\"uk-card uk-card-small uk-width-1-1\"\n                style={{ borderRadius: 1, marginBottom: 22, padding: 10, backgroundColor: '#fff' }}\n            >\n                <div className=\"uk-width-1-1 post-metadata uk-padding-remove-bottom uk-padding-small\">\n                    <div className=\"uk-grid-small uk-flex uk-width-4-5\" uk-grid={true}>\n                        <div className=\"uk-width-auto\">\n                            <Avatar url={'https://getuikit.com/docs/images/avatar.jpg'} size={50} presence={false} />\n                        </div>\n                        <div className=\"uk-width-auto post-info\">\n                            <PopoverLink bigger={true} link={article.id}>\n                                {author.firstname} {author.lastname}\n                            </PopoverLink>\n                            <p className=\"uk-text-meta uk-margin-remove-top\">\n                                <time dateTime={article.createdAt}>\n                                    <TimeAgo className=\"timeago\" date={article.createdAt} /> ago &#149;{' '}\n                                    {article.body.lengthInMinutes()}\n                                </time>\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"uk-width-1-5 uk-flex-center\">\n                        <button className=\"uk-button uk-button-primary uk-button-small\">Connect</button>\n                    </div>\n                </div>\n                <div className=\"uk-card-body uk-padding-remove-vertical\" style={{ paddingTop: 10, borderBottom: 1 }}>\n                    <h5\n                        className=\"uk-text-medium uk-text-bold uk-text-break\"\n                        style={{ fontSize: 23, fontFamily: 'Open Sans' }}\n                    >\n                        {article.title}\n                    </h5>\n                    <p style={{ color: '#212121', fontSize: 17 }}>{article.body}</p>\n                </div>\n                <div className=\"uk-padding-small\">\n                    <TopInterest />\n                </div>\n                <div\n                    className=\"post-stats clearfix uk-padding-small uk-padding-remove-horizontal\"\n                    style={{ paddingTop: 10, paddingBottom: 1 }}\n                >\n                    <div className=\"uk-flex pull-left uk-padding-small\">\n                        <Likebutton liked={true} likeCount={2} />\n                        <a className=\"response-count uk-margin-left\">\n                            <span uk-icon=\"icon:  forward; ratio: 1.2\" />Share\n                        </a>\n                    </div>\n\n                    <div className=\"uk-flex  response-count pull-right uk-padding-small\">\n                        <div className=\"dropdown\">\n                            <button className=\"uk-button uk-button-text uk-margin-right\" type=\"button\">\n                                <span uk-icon=\"icon: more; ratio: 1.0\" />\n                            </button>\n                            <div data-uk-drop=\"mode: click; pos: bottom-right\">\n                                <ul className=\"menu\">\n                                    <li className=\"menu-item uk-padding-small\">\n                                        <a href=\"#\" className=\"uk-text-bold\">\n                                            <span uk-icon=\"icon: plus-circle; ratio: 1\" /> Activity\n                                        </a>\n                                    </li>\n                                    <li className=\"menu-item uk-padding-small\">\n                                        <a href=\"#\" className=\"uk-text-bold\">\n                                            <span uk-icon=\"icon: warning; ratio: 1\" /> Don't like this\n                                        </a>\n                                    </li>\n                                    <li className=\"menu-item uk-padding-small\">\n                                        <a href=\"#\" className=\"uk-text-bold\">\n                                            <span uk-icon=\"icon: info; ratio: 1\" /> Report\n                                        </a>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <button className=\"uk-button uk-button-text\">\n                            <span uk-icon=\"icon: bookmark; ratio: 1.2\" /> Favourite\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderCommentBox() {\n        return (\n            <div\n                className=\"uk-card uk-card-small uk-width-1-1\"\n                style={{ borderRadius: 1, marginBottom: 30, padding: 10, backgroundColor: '#fff' }}\n            >\n                <div className=\"uk-grid-small uk-flex\" uk-grid={true} style={{ padding: 0, marginTop: 3 }}>\n                    <div className=\"uk-width-auto\">\n                        <Avatar url={'https://getuikit.com/docs/images/avatar.jpg'} size={30} presence={false} />\n                    </div>\n                    <div className=\"uk-width-auto post-info\">John Doe</div>\n                </div>\n                <CommentEditor />\n                <button className=\"uk-button uk-button-primary uk-button-small uk-text-right\">Comment</button>\n            </div>\n        );\n    }\n\n    renderComment() {\n        return (\n            <article\n                className=\"uk-comment uk-visible-toggle uk-padding-small\"\n                style={{ backgroundColor: '#fff', marginBottom: 10 }}\n            >\n                <header className=\"uk-comment-header uk-position-relative\">\n                    <div className=\"uk-grid-medium uk-flex-middle\" data-uk-grid={true}>\n                        <div className=\"uk-width-auto\">\n                            <Avatar url=\"https://getuikit.com/docs/images/avatar.jpg\" size={40} presence={false} />\n                        </div>\n                        <div className=\"uk-width-expand\">\n                            <h4 className=\"uk-comment-title uk-margin-remove\">\n                                <a className=\"uk-link-reset\" href=\"#\">\n                                    Author\n                                </a>\n                            </h4>\n                            <p className=\"uk-comment-meta uk-margin-remove-top\">\n                                <a className=\"uk-link-reset\" href=\"#\">\n                                    12 days ago\n                                </a>\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"uk-position-top-right uk-position-small uk-hidden-hover\">\n                        <a className=\"uk-link-muted\" href=\"#\">\n                            Reply\n                        </a>\n                    </div>\n                </header>\n                <div className=\"uk-comment-body\">\n                    <p>\n                        Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt\n                        ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo\n                        dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor\n                        sit amet.\n                    </p>\n                </div>\n            </article>\n        );\n    }\n\n    renderCommentList() {\n        return (\n            <div\n                className=\"uk-card uk-card-small uk-card-small uk-width-1-1\"\n                style={{ backgroundColor: 'transparent' }}\n            >\n                <Label text=\"Comment responses\" />\n                {this.renderComment()}\n                {this.renderComment()}\n                {this.renderComment()}\n                {this.renderComment()}\n                {this.renderComment()}\n                {this.renderComment()}\n            </div>\n        );\n    }\n\n    render() {\n        if (this.state.loading) {\n            // tslint:disable-next-line:jsx-wrap-multiline\n            return (\n                <div className=\"uk-position-center\">\n                    <div className=\"loader uk-margin-small\">\n                        <div className=\"bullet\" />\n                        <div className=\"bullet\" />\n                        <div className=\"bullet\" />\n                        <div className=\"bullet\" />\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div className=\"uk-width-1-1 uk-padding\">\n                <button\n                    className=\"uk-button uk-button-primary uk-button-small uk-margin-bottom-right\"\n                    onClick={() => this.props.history.goBack()}\n                >\n                    Go Back\n                </button>\n                <div className=\"uk-width-1-1 uk-grid uk-flex-stretch\">\n                    <div className=\"uk-width-2-3@m uk-width-3-3@s\">\n                        {this.renderArticle(this.state.currentArticle)}\n                        {this.renderCommentBox()}\n                        {this.renderCommentList()}\n                    </div>\n                    <div className=\"uk-width-1-3@m uk-width-1-1@s\">\n                        <Label text=\"Similar articles\" />\n                        <ArticleItem article={this.state.currentArticle} small={true} />\n                        <ArticleItem article={this.state.currentArticle} small={true} />\n                        <ArticleItem article={this.state.currentArticle} small={true} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(compose(withApollo)(ArticleDetail));\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Containers/ArticleDetail/index.tsx","import * as React from 'react';\nimport { withRouter, RouteComponentProps, Link } from 'react-router-dom';\nimport { compose, graphql, withApollo } from 'react-apollo';\nimport { Helmet } from 'react-helmet';\nimport { ChildProps } from 'react-apollo/types';\nimport { LOGIN_USER } from 'Graphql/Mutation';\nimport { User } from 'CustomTypings/schema';\nimport { validateLogin } from 'Utils/helpers';\nimport * as UIkit from 'uikit';\n\nimport './style.scss';\nimport { AUTH_TOKEN, CURRENT_USER } from '../../../constants';\n\ninterface Props {\n    // tslint:disable-next-line:no-any\n    login: any;\n    // tslint:disable-next-line:no-any\n    refreshToken?: any;\n    // tslint:disable-next-line:no-any\n    client?: any;\n}\n\ninterface InputProps {\n    email: string;\n    password: string;\n}\n\ninterface Response {\n    token: string;\n    user: User;\n}\n\nclass Login extends React.Component<RouteComponentProps & Props & ChildProps<Response, InputProps>, {}> {\n    state = {\n        show: false,\n        email: '',\n        password: '',\n        everFocusedEmail: false,\n        everFocusedPassword: false,\n        inFocus: '',\n        loading: false,\n    };\n\n    handleEmailChange = (evt) => {\n        this.setState({ email: evt.target.value });\n    }\n\n    handlePasswordChange = (evt) => {\n        this.setState({ password: evt.target.value });\n    }\n\n    componentWillMount() {\n        const email = this.props.location.email;\n        if (email) {\n            this.setState({ email });\n        }\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault();\n        if (!this.canBeSubmitted()) {\n            return;\n        }\n        this.setState({ loading: true });\n        const { email, password } = this.state;\n        this.props\n            .login({\n                variables: {\n                    email,\n                    password,\n                },\n            })\n            .then((result) => {\n                const token = result.data.login.token;\n                const user = result.data.login.user;\n                localStorage.setItem(AUTH_TOKEN, token);\n                localStorage.setItem(CURRENT_USER, result.data.login.user);\n                this.props.refreshToken(token);\n                this.setState({ loading: false });\n                if (user.completedProfile === 1) {\n                    this.props.history.replace('/add/profile');\n                } else {\n                    this.props.history.replace('/');\n                }\n            })\n            .catch((err) => {\n                this.setState({ loading: false });\n                UIkit.notification(`Error: ${err.message}`, { status: 'danger', pos: 'top-right' });\n            });\n    }\n\n    canBeSubmitted() {\n        const errors = validateLogin(this.state.email, this.state.password);\n        const isDisabled = Object.keys(errors).some((x) => errors[x]);\n        return !isDisabled;\n    }\n\n    render() {\n        const errors = validateLogin(this.state.email, this.state.password);\n        const isDisabled = Object.keys(errors).some((x) => errors[x]);\n\n        return (\n            <div\n                className=\"uk-flex uk-flex-stretch\"\n                // tslint:disable-next-line:jsx-boolean-value\n                data-uk-grid\n                style={{ height: '100vh', backgroundColor: '#ffffff' }}\n            >\n                <Helmet>\n                    <title>Unizonn | Login</title>\n                    <meta name=\"an inclusive community\" content=\"Unizonn login\" />\n                </Helmet>\n                <div className=\"uk-width-2-5 sideBg uk-visible@m\" id=\"sideBg\">\n                    <div className=\"uk-flex uk-flex-stretch uk-flex-middle\">.</div>\n                </div>\n                <div\n                    className=\"uk-container uk-width-3-5@m uk-width-1-1@s uk-flex\n          uk-flex-stretch uk-flex-middle uk-box-shadow-small\"\n                >\n                    <form\n                        className=\"uk-form-vertical uk-width-1-1 uk-margin-large uk-padding-large uk-padding-remove-vertical\"\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className=\"uk-margin\">\n                            <h3 className=\"uk-heading-primary uk-align-center\">Login </h3>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <div className=\"uk-inline uk-width-1-1\">\n                                <span className=\"uk-form-icon\" uk-icon=\"icon: user\" />\n                                <input\n                                    className={`uk-input ${errors.password ? 'uk-form-danger' : ''} `}\n                                    type=\"email\"\n                                    value={this.state.email}\n                                    required={true}\n                                    onChange={this.handleEmailChange}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <div className=\"uk-inline uk-width-1-1\">\n                                <span className=\"uk-form-icon\" uk-icon=\"icon: lock\" />\n                                <input\n                                    className={`uk-input ${errors.password ? 'uk-form-danger' : ''} `}\n                                    type=\"password\"\n                                    value={this.state.password}\n                                    required={true}\n                                    onChange={this.handlePasswordChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <a className={`uk-button uk-button-text}`}>Forgot password?</a>\n                        </div>\n                        <div className=\"uk-margin\">\n                            {this.state.loading ? (\n                                <div\n                                    className=\"uk-spinner uk-icon\"\n                                    data-uk-spinner=\"ratio: 1\"\n                                    style={{ color: 'green' }}\n                                />\n                            ) : (\n                                <button\n                                    className={`uk-button uk-button-primary uk-width-1-1\n                    uk-align-right ${isDisabled ? 'disabled' : 'disabled'}`}\n                                    type=\"submit\"\n                                >\n                                    LOGIN\n                                </button>\n                            )}\n                        </div>\n                        <br />\n                        <hr className=\"uk-divider-icon\" />\n                        <div className=\"uk-margin\">\n                            <p className={`uk-button uk-button-text}`}>Don't have an account?</p>\n                            <Link\n                                className={`uk-button uk-button-secondary\n                 uk-align-right`}\n                                to=\"/signup\"\n                            >\n                                Sign up now\n                            </Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(\n  compose(\n    withApollo,\n    graphql<Response, InputProps, Props>(LOGIN_USER, {\n        name: 'login',\n    }),\n  )(Login),\n);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Containers/Auth/Login/index.tsx","import * as React from 'react';\nimport { withRouter, RouteComponentProps, Link } from 'react-router-dom';\nimport { compose, withApollo, graphql } from 'react-apollo';\nimport { ChildProps } from 'react-apollo/types';\nimport { SIGNUP_USER } from 'Graphql/Mutation';\nimport { User } from 'CustomTypings/schema';\nimport { validateSignup } from 'Utils/helpers';\nimport * as UIkit from 'uikit';\nimport { AUTH_TOKEN, CURRENT_USER } from '../../../constants';\nimport './style.css';\n\ninterface InputProps {\n    email: string;\n    password: string;\n}\n\ninterface Response {\n    token: string;\n    user: User;\n}\n\ninterface Props {\n    // tslint:disable-next-line:no-any\n    signup: any;\n    // tslint:disable-next-line:no-any\n    refreshToken?: any;\n    // tslint:disable-next-line:no-any\n    client?: any;\n}\n\nclass Signup extends React.Component<RouteComponentProps & Props & ChildProps<Response, InputProps>, {}> {\n    state = {\n        show: false,\n        email: '',\n        username: '',\n        password: '',\n        confirmPassword: '',\n        gender: '',\n        userType: '',\n        firstname: '',\n        lastname: '',\n        everFocusedEmail: false,\n        everFocusedPassword: false,\n        inFocus: '',\n        loading: false,\n    };\n\n    handleEmailChange = (evt) => {\n        this.setState({ email: evt.target.value });\n    }\n\n    handlePasswordChange = (evt) => {\n        this.setState({ password: evt.target.value });\n    }\n\n    handleConPasswordChange = (evt) => {\n        this.setState({ confirmPassword: evt.target.value });\n    }\n\n    handleUsernameChange = (evt) => {\n        this.setState({ username: evt.target.value });\n    }\n\n    handleFnameChange = (evt) => {\n        this.setState({ firstname: evt.target.value });\n    }\n\n    handleLnameChange = (evt) => {\n        this.setState({ lastname: evt.target.value });\n    }\n\n    handleUserTypeChange = (evt) => {\n        this.setState({ userType: evt.target.value });\n    }\n\n    handleGenderChange = (evt) => {\n        this.setState({ gender: evt.target.value });\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault();\n        if (!this.canBeSubmitted()) {\n            return;\n        }\n        this.setState({ loading: true });\n        const { email, password, username, firstname, lastname, gender, userType } = this.state;\n        this.props\n            .signup({\n                variables: {\n                    email,\n                    password,\n                    username,\n                    firstname,\n                    lastname,\n                    userType,\n                    gender,\n                },\n            })\n            .then((result) => {\n                const token = result.data.signup.token;\n                localStorage.setItem(AUTH_TOKEN, token);\n                localStorage.setItem(CURRENT_USER, result.data.signup.user);\n                this.props.refreshToken(token);\n                this.setState({ loading: false });\n                this.props.history.replace('/add/profile');\n            })\n            .catch((err) => {\n                this.setState({ loading: false });\n                UIkit.notification(`${err.message}`, { status: 'danger', pos: 'top-right' });\n            });\n    }\n\n    canBeSubmitted() {\n        const errors = validateSignup(\n            this.state.email,\n            this.state.password,\n            this.state.username,\n            this.state.confirmPassword,\n            this.state.firstname,\n            this.state.lastname,\n            this.state.gender,\n            this.state.userType,\n        );\n        const isDisabled = Object.keys(errors).some((x) => errors[x]);\n        return !isDisabled;\n    }\n\n    componentWillMount() {\n        const email = this.props.location.email;\n        if (email) {\n            this.setState({ email });\n        }\n    }\n\n    render() {\n        const errors = validateSignup(\n            this.state.email,\n            this.state.password,\n            this.state.username,\n            this.state.confirmPassword,\n            this.state.firstname,\n            this.state.lastname,\n            this.state.gender,\n            this.state.userType,\n        );\n        const isDisabled = Object.keys(errors).some((x) => errors[x]);\n\n        return (\n            <div\n                className=\"uk-flex uk-flex-stretch\"\n                // tslint:disable-next-line:jsx-boolean-value\n                data-uk-grid\n                style={{ backgroundColor: '#ffffff' }}\n            >\n                <div className=\"uk-width-2-5 uk-visible@m sideBg uk-flex uk-flex-middle \" id=\"sideBg\">\n                    <div\n                        className=\"uk-position-relative uk-visible-toggle uk-light\"\n                        data-uk-slideshow=\"animation: scale\"\n                    >\n                        <ul className=\"uk-slideshow-items\">\n                            <li>\n                                <img\n                                    src=\"https://getuikit.com/docs/images/photo.jpg\"\n                                    alt=\"\"\n                                    // tslint:disable-next-line:jsx-boolean-value\n                                    uk-cover\n                                />\n                            </li>\n                            <li>\n                                <img\n                                    src=\"https://getuikit.com/docs/images/dark.jpg\"\n                                    alt=\"\"\n                                    // tslint:disable-next-line:jsx-boolean-value\n                                    data-uk-cover\n                                />\n                            </li>\n                            <li>\n                                <img\n                                    src=\"https://getuikit.com/docs/images/light.jpg\"\n                                    alt=\"\"\n                                    // tslint:disable-next-line:jsx-boolean-value\n                                    data-uk-cover\n                                />\n                            </li>\n                        </ul>\n                        <a\n                            className=\"uk-position-center-left uk-position-small uk-hidden-hover\"\n                            href=\"#\"\n                            // tslint:disable-next-line:jsx-boolean-value\n                            data-uk-slidenav-previous\n                            data-uk-slideshow-item=\"previous\"\n                        />\n                        <a\n                            className=\"uk-position-center-right uk-position-small uk-hidden-hover\"\n                            href=\"#\"\n                            // tslint:disable-next-line:jsx-boolean-value\n                            data-uk-slidenav-next\n                            data-uk-slideshow-item=\"next\"\n                        />\n                    </div>\n                </div>\n                <div\n                    className=\"uk-container uk-width-3-5@m uk-width-1-1@s uk-flex\n          uk-flex-stretch uk-flex-middle uk-box-shadow-small\"\n                >\n                    <form\n                        className=\"uk-form-horizontal uk-width-1-1 uk-margin-large uk-padding-large uk-padding-remove-vertical\"\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className=\"uk-margin\" style={{ marginTop: 40 }}>\n                            <h3 className=\"uk-heading-primary uk-align-center\">Signup </h3>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"firstname\">\n                                Username\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <input\n                                    id=\"firstname\"\n                                    className={`uk-input ${errors.username ? 'uk-form-danger' : ''} `}\n                                    type=\"text\"\n                                    value={this.state.username}\n                                    required={true}\n                                    onChange={this.handleUsernameChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"firstname\">\n                                Firstname\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <input\n                                    id=\"firstname\"\n                                    className={`uk-input ${errors.firstname ? 'uk-form-danger' : ''} `}\n                                    type=\"text\"\n                                    value={this.state.firstname}\n                                    required={true}\n                                    onChange={this.handleFnameChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"lastname\">\n                                Lastname\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <input\n                                    id=\"lastname\"\n                                    className={`uk-input ${errors.lastname ? 'uk-form-danger' : ''} `}\n                                    type=\"text\"\n                                    value={this.state.lastname}\n                                    required={true}\n                                    onChange={this.handleLnameChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"email\">\n                                Email\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <input\n                                    id=\"email\"\n                                    className={`uk-input ${errors.email ? 'uk-form-danger' : ''} `}\n                                    type=\"email\"\n                                    value={this.state.email}\n                                    required={true}\n                                    onChange={this.handleEmailChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"form-horizontal-text\">\n                                Password\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <input\n                                    className={`uk-input ${errors.password ? 'uk-form-danger' : ''} `}\n                                    type=\"password\"\n                                    id=\"password\"\n                                    value={this.state.password}\n                                    required={true}\n                                    onChange={this.handlePasswordChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"confirmPassword\">\n                                Confirm Password\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <input\n                                    className={`uk-input ${errors.confirmPassword ? 'uk-form-danger' : ''} `}\n                                    type=\"password\"\n                                    id=\"confirmPassword\"\n                                    value={this.state.confirmPassword}\n                                    required={true}\n                                    onChange={this.handleConPasswordChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"form-horizontal-text\">\n                                Gender\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <select\n                                    className=\"uk-select\"\n                                    value={this.state.gender}\n                                    required={true}\n                                    onChange={this.handleGenderChange}\n                                >\n                                    <option value=\"\">Select sex</option>\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"form-horizontal-text\">\n                                I am a\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <select\n                                    className=\"uk-select\"\n                                    value={this.state.userType}\n                                    required={true}\n                                    onChange={this.handleUserTypeChange}\n                                >\n                                    <option value=\"\">Select one</option>\n                                    <option value=\"Student\">Student</option>\n                                    <option value=\"Lecturer\">Lecturer</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            {this.state.loading ? (\n                                <div data-uk-spinner=\"ratio: 1\" />\n                            ) : (\n                                <button\n                                    className={`uk-button uk-button-primary uk-width-1-1 ${\n                                        isDisabled ? 'disabled' : 'disabled'\n                                    }`}\n                                    type=\"submit\"\n                                >\n                                    Sign Up\n                                </button>\n                            )}\n                        </div>\n                        <hr className=\"uk-divider-icon\" />\n                        <div className=\"uk-margin\">\n                            <p className={`uk-button uk-button-text}`}>Already have an account?</p>\n                            <Link\n                                className={`uk-button uk-button-secondary\n                 uk-align-right`}\n                                to=\"/login\"\n                            >\n                                Login now\n                            </Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(\n    compose(\n        withApollo,\n        graphql<Response, InputProps, Props>(SIGNUP_USER, {\n            name: 'signup',\n        }),\n    )(Signup),\n);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Containers/Auth/Signup/index.tsx","import * as React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { compose, withApollo, graphql } from 'react-apollo';\nimport StackGrid from 'react-stack-grid';\nimport * as UIkit from 'uikit';\nimport { ALL_INTEREST } from 'Graphql/Query';\n// import { User } from 'CustomTypings/schema';\nimport InterestItem from 'Components/InterestItem';\nimport { Interest } from 'CustomTypings/schema';\nimport { ADD_INTERESTS } from 'Graphql/Mutation';\nimport './style.css';\n\ninterface Props {\n    // tslint:disable-next-line:no-any\n    interests: any[];\n    // tslint:disable-next-line:no-any\n    addInterests: any;\n    // tslint:disable-next-line:no-any\n    refreshToken?: any;\n    // tslint:disable-next-line:no-any\n    client?: any;\n}\n\ninterface State {\n    loading: boolean;\n    // tslint:disable-next-line:no-any\n    selected: string[];\n    show: boolean;\n}\nclass InterestPage extends React.Component<RouteComponentProps & Props, State> {\n    state = {\n        show: false,\n        selected: ['1'],\n        loading: false,\n    };\n\n    onSelectAdd = (id) => {\n        const temp = this.state.selected;\n        const index = this.state.selected.indexOf(id);\n\n        if (index === -1) {\n            temp.push(id);\n        } else {\n            temp.splice(index, 1);\n        }\n        this.setState({ selected: temp });\n    }\n\n    onSelectRemove = (id) => {\n        this.state.selected.indexOf(id);\n    }\n\n    // tslint:disable-next-line:no-any\n    save(): any {\n        // tslint:disable-next-line:no-console\n        console.log(this.state.selected);\n        let inter: string[] = [];\n        inter = this.state.selected;\n        this.props.client\n            .mutate({\n                mutation: ADD_INTERESTS,\n                variables: {\n                    interests: inter,\n                },\n            })\n            .then((result) => {\n                console.log(result);\n                this.props.history.push('/signup/complete');\n            })\n            .catch((err) => {\n                UIkit.notification(`${err.message}`, { status: 'danger', pos: 'top-right' });\n            });\n    }\n\n    render() {\n        // tslint:disable-next-line:no-console\n        console.log(this.props.interests.allInterest);\n        if (this.props.interests.loading) {\n            return <div>Loading</div>;\n        }\n\n        return (\n            <div className=\"uk-width-1-1\" style={{ height: '100vh', backgroundColor: '#ffffff' }}>\n                <h1 className=\"uk-postion-top-center uk-text-center\" style={{ marginTop: 50 }}>\n                    Lets pick your interest\n                </h1>\n                <p className=\"uk-postion-top-center uk-text-center uk-padding\">Select minimum of 5 interest</p>\n                <StackGrid columnWidth={200}>\n                    {this.props.interests.allInterest.map((data, i) => (\n                        <InterestItem\n                            key={i}\n                            name={data.name}\n                            id={data.id}\n                            url={data.avatar}\n                            checked={this.state.selected.indexOf(data.id) === -1 ? false : true}\n                            onClickAdd={this.onSelectAdd}\n                        />\n                    ))}\n                </StackGrid>\n                <div className=\"uk-padding-small\" style={{ position: 'fixed', bottom: 0, right: 40 }}>\n                    <button\n                        className=\"uk-button uk-button-primary\"\n                        disabled={this.state.selected.length > 1 ? false : true}\n                        onClick={() => this.save()}\n                    >\n                        SAVE INTEREST\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(\n    compose(\n        withApollo,\n        graphql<Interest, {}, Props>(ALL_INTEREST, { name: 'interests' }),\n        graphql<Interest, {}, Props>(ADD_INTERESTS, { name: 'addInterests' }),\n    )(InterestPage),\n);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Containers/Auth/Signup/interest.tsx","import * as React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { compose, withApollo, graphql } from 'react-apollo';\nimport * as UIkit from 'uikit';\nimport { Country, Institutions, Department, User } from 'CustomTypings/schema';\nimport { ALL_COUNTRIES, ALL_DEPARTMENTS, ALL_INSTITUTION } from 'Graphql/Query';\nimport { validateProfile } from 'Utils/helpers';\nimport { ADD_PROFILE } from 'Graphql/Mutation';\n\nimport './style.css';\n\ninterface Props {\n    country: Country;\n    institution: Institutions;\n    department: Department;\n    // tslint:disable-next-line:no-any\n    refreshToken?: any;\n    // tslint:disable-next-line:no-any\n    client?: any;\n    // tslint:disable-next-line:no-any\n    addProfile?: any;\n}\n\nclass SignupProfile extends React.Component<RouteComponentProps & Props> {\n    state = {\n        show: false,\n        country: '',\n        photo: '',\n        url: '',\n        countryList: [],\n        institution: '',\n        institutionList: [],\n        department: '',\n        departmentList: [],\n        everFocusedInstitution: false,\n        everFocusedCountry: false,\n        inFocus: '',\n        loading: false,\n    };\n\n    handleInstChange = (evt) => {\n        this.setState({ institution: evt.target.value });\n        this.getDepartment(evt.target.value);\n    }\n\n    handleDeptChange = (evt) => {\n        this.setState({ department: evt.target.value });\n    }\n\n    handleCountryChange = (evt) => {\n        this.setState({ country: evt.target.value });\n        this.getInstitution(evt.target.value);\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault();\n        if (!this.canBeSubmitted()) {\n            return;\n        }\n        this.setState({ loading: true });\n        this.props\n            .addProfile({\n                variables: {\n                    photoId: this.state.photo,\n                    countryId: this.state.country,\n                    institutionId: this.state.institution,\n                    departmentId: this.state.department,\n                },\n            })\n            .then((result) => {\n                this.props.history.replace('/add/interest');\n            })\n            .catch((err) => {\n                // Err catch block\n            });\n    }\n\n    canBeSubmitted() {\n        const errors = validateProfile(\n            this.state.photo,\n            this.state.country,\n            this.state.institution,\n            this.state.department,\n        );\n        const isDisabled = Object.keys(errors).some((x) => errors[x]);\n        return !isDisabled;\n    }\n\n    getCountry() {\n        this.props.client\n            .query({\n                query: ALL_COUNTRIES,\n            })\n            .then((result) => {\n                // tslint:disable-next-line:no-console\n                console.log(result.data.getCountry);\n                this.setState({ countryList: result.data.getCountry });\n            })\n            .catch((err) => {\n                // jkjk\n            });\n    }\n\n    getInstitution(value: string) {\n        this.props.client\n            .query({\n                query: ALL_INSTITUTION,\n                variables: {\n                    idCountry: value,\n                },\n            })\n            .then((result) => {\n                // tslint:disable-next-line:no-console\n                console.log(result);\n                this.setState({ institutionList: result.data.getInstitution });\n            })\n            .catch((err) => {\n                // jkjk\n            });\n    }\n\n    getDepartment(value: string) {\n        this.props.client\n            .query({\n                query: ALL_DEPARTMENTS,\n                variables: {\n                    idInstitutions: value,\n                },\n            })\n            .then((result) => {\n                this.setState({ departmentList: result.data.getDepartment });\n            })\n            .catch((err) => {\n                // jkjk\n            });\n    }\n\n    componentWillMount() {\n        const email = this.props.location.email;\n        if (email) {\n            this.setState({ email });\n        }\n        this.getCountry();\n    }\n\n    componentDidMount() {\n        const bar = document.getElementById('js-progressbar') as HTMLInputElement;\n\n        UIkit.upload('.js-upload', {\n            url: 'https://uniserver.now.sh/upload',\n            multiple: false,\n            name: 'data',\n            dataType: 'json',\n\n            beforeSend() {\n                // fd\n            },\n            beforeAll() {\n                // fd\n            },\n            load() {\n                // fd\n            },\n            error() {\n                // tslint:disable-next-line:no-console\n                console.log('error', arguments);\n            },\n            complete() {\n                // tslint:disable-next-line:no-console\n                console.log('complete', arguments);\n            },\n\n            // tslint:disable-next-line:typedef\n            loadStart(e) {\n                // tslint:disable-next-line:no-console\n                console.log('loadStart', arguments);\n                if (bar) {\n                    bar.removeAttribute('hidden');\n                    bar.max = e.total;\n                    bar.value = e.loaded;\n                }\n            },\n\n            // tslint:disable-next-line:typedef\n            progress(e) {\n                // tslint:disable-next-line:no-console\n                console.log('progress', arguments);\n                if (bar) {\n                    bar.max = e.total;\n                    bar.value = e.loaded;\n                }\n            },\n\n            // tslint:disable-next-line:typedef\n            loadEnd(e) {\n                // tslint:disable-next-line:no-console\n                console.log('loadEnd', arguments);\n\n                if (bar) {\n                    bar.max = e.total;\n                    bar.value = e.loaded;\n                }\n            },\n\n            completeAll: (result, response) => {\n                // tslint:disable-next-line:no-console\n                console.log('completeAll', result.response);\n                const data = JSON.parse(result.response);\n                this.setState({ photo: data.id, url: data.url });\n\n                setTimeout(() => {\n                    if (bar) {\n                        bar.setAttribute('hidden', 'hidden');\n                    }\n                },         1000);\n            },\n        });\n    }\n\n    render() {\n        const errors = validateProfile(\n            this.state.photo,\n            this.state.country,\n            this.state.institution,\n            this.state.department,\n        );\n        const isDisabled = Object.keys(errors).some((x) => errors[x]);\n\n        return (\n            <div\n                className=\"uk-flex uk-flex-stretch\"\n                // tslint:disable-next-line:jsx-boolean-value\n                data-uk-grid\n                style={{ height: '100vh', backgroundColor: '#ffffff' }}\n            >\n                <div className=\"uk-width-2-5 uk-visible@m sideBg uk-flex uk-flex-middle \" id=\"sideBg\">\n                    <div\n                        className=\"uk-position-relative uk-visible-toggle uk-light\"\n                        data-uk-slideshow=\"animation: scale\"\n                    >\n                        <ul className=\"uk-slideshow-items\">\n                            <li>\n                                <img\n                                    src=\"https://getuikit.com/docs/images/photo.jpg\"\n                                    alt=\"\"\n                                    // tslint:disable-next-line:jsx-boolean-value\n                                    uk-cover\n                                />\n                            </li>\n                            <li>\n                                <img\n                                    src=\"https://getuikit.com/docs/images/dark.jpg\"\n                                    alt=\"\"\n                                    // tslint:disable-next-line:jsx-boolean-value\n                                    data-uk-cover\n                                />\n                            </li>\n                            <li>\n                                <img\n                                    src=\"https://getuikit.com/docs/images/light.jpg\"\n                                    alt=\"\"\n                                    // tslint:disable-next-line:jsx-boolean-value\n                                    data-uk-cover\n                                />\n                            </li>\n                        </ul>\n                        <a\n                            className=\"uk-position-center-left uk-position-small uk-hidden-hover\"\n                            href=\"#\"\n                            // tslint:disable-next-line:jsx-boolean-value\n                            data-uk-slidenav-previous\n                            data-uk-slideshow-item=\"previous\"\n                        />\n                        <a\n                            className=\"uk-position-center-right uk-position-small uk-hidden-hover\"\n                            href=\"#\"\n                            // tslint:disable-next-line:jsx-boolean-value\n                            data-uk-slidenav-next\n                            data-uk-slideshow-item=\"next\"\n                        />\n                    </div>\n                </div>\n                <div\n                    className=\"uk-container uk-width-3-5@m uk-width-1-1@s uk-flex\n          uk-flex-stretch uk-flex-middle uk-box-shadow-small\"\n                >\n                    <form\n                        className=\"uk-form-horizontal uk-width-1-1 uk-margin-large uk-padding-large uk-padding-remove-vertical\"\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className=\"uk-margin\">\n                            <h3 className=\"uk-heading-primary uk-align-center\">You're Almost done </h3>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <div className=\"js-upload uk-placeholder uk-text-center\">\n                                <span uk-icon=\"icon: cloud-upload\" />\n                                <span className=\"uk-text-middle\">Attach photo by dropping it here or </span>\n                                <div uk-form-custom=\"\">\n                                    <input type=\"file\" multiple={false} />\n                                    <span className=\"uk-link\">selecting one</span>\n                                </div>\n                            </div>\n                            <img className=\"uk-border-circle\" src={this.state.url} width=\"90\" height=\"90\" />\n                            <progress id=\"js-progressbar\" className=\"uk-progress\" value=\"0\" max=\"100\" hidden={true} />\n                        </div>\n                        {this.state.department}\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"firstname\">\n                                Country\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <select\n                                    className=\"uk-select\"\n                                    value={this.state.country}\n                                    required={true}\n                                    onChange={this.handleCountryChange}\n                                >\n                                    <option value=\"\">Select country</option>\n                                    {this.state.countryList.map((country: Country, i) => (\n                                        // tslint:disable-next-line:jsx-key\n                                        <option key={i} value={country.id}>\n                                            {country.name}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"lastname\">\n                                Institution\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <select\n                                    className=\"uk-select\"\n                                    value={this.state.institution}\n                                    required={true}\n                                    onChange={this.handleInstChange}\n                                >\n                                    <option value=\"\">Select institution</option>\n                                    {this.state.institutionList.map((institution: Institutions, i) => (\n                                        // tslint:disable-next-line:jsx-key\n                                        <option key={i} value={institution.id}>\n                                            {institution.title}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"email\">\n                                Course\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <select\n                                    className=\"uk-select\"\n                                    value={this.state.department}\n                                    required={true}\n                                    onChange={this.handleDeptChange}\n                                >\n                                    <option value=\"\">Select course</option>\n                                    {this.state.departmentList.map((course: Department, i) => (\n                                        // tslint:disable-next-line:jsx-key\n                                        <option key={i} value={course.id}>\n                                            {course.name}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            {this.state.loading ? (\n                                <div data-uk-spinner=\"ratio: 1\" />\n                            ) : (\n                                <button\n                                    className={`uk-button uk-button-primary uk-width-1-1 ${\n                                        isDisabled ? 'disabled' : 'disabled'\n                                    }`}\n                                    disabled={isDisabled}\n                                    type=\"submit\"\n                                >\n                                    SAVE & NEXT\n                                </button>\n                            )}\n                        </div>\n                        <hr className=\"uk-divider-icon\" />\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(\n    compose(\n        withApollo,\n        graphql<Country, {}, Props>(ALL_COUNTRIES, { name: 'country' }),\n        graphql<User, {}, Props>(ADD_PROFILE, { name: 'addProfile' }),\n        graphql<Response, InputProps, Props>(ADD_PROFILE, {\n            name: 'addProfile',\n        }),\n    )(SignupProfile),\n);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Containers/Auth/Signup/signupProfile.tsx","import * as React from 'react';\n// import Editor from 'Components/Editor';\nimport UnizonnEditor from 'Components/Editor2';\nimport Select from 'react-select-plus';\nimport { ALL_INTEREST } from 'Graphql/Query';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { compose, graphql, withApollo } from 'react-apollo';\n// import { Helmet } from 'react-helmet';\nimport { ChildProps } from 'react-apollo/types';\nimport 'react-select-plus/dist/react-select-plus.css';\nimport './style.css';\nimport { Interest } from 'CustomTypings/schema';\n\ninterface Props {\n    // tslint:disable-next-line:no-any\n    allInterest: any;\n    // tslint:disable-next-line:no-any\n    refreshToken?: any;\n    // tslint:disable-next-line:no-any\n    client?: any;\n}\n\ninterface Response {\n    allInterest: Interest[];\n}\n\nclass ComposeWrite extends React.Component<RouteComponentProps & Props & ChildProps<Response, {}>, {}> {\n    state = {\n        title: null,\n        body: null,\n        category: [],\n        removeSelected: true,\n        value: [],\n    };\n\n    handleChange = (value) => {\n        this.setState({ value });\n        // console.log(`Selected: ${selectedOption.label}`);\n    }\n\n    addInterestContent() {\n        this.props.client\n            .query({\n                query: ALL_INTEREST,\n            })\n            .then((result) => {\n                // tslint:disable-next-line:no-any\n                const tempList = [] as any;\n                result.data.allInterest.map((interest) => {\n                    const temp = { value: interest.id, label: interest.name };\n                    tempList.push(temp);\n                });\n                // tslint:disable-next-line:no-console\n                console.log(result);\n                this.setState({ category: tempList });\n            });\n    }\n\n    componentDidMount() {\n        this.addInterestContent();\n    }\n    render() {\n        const { value, category, title } = this.state;\n        // tslint:disable-next-line:no-console\n        console.log(title);\n\n        return (\n            <div className=\"uk-width-1-1\">\n                <div className=\"uk-flex uk-padding-large\">\n                    <div className=\"uk-width-2-3@m uk-width-1-1@s\">\n                        <div className=\"uk-card uk-card-small uk-card-default\" style={{ paddingTop: 10 }}>\n                            jkjk\n                        </div>\n                        <div\n                            className=\"uk-card uk-card-large uk-card-default\"\n                            style={{ minHeight: '60vh', paddingTop: 10 }}\n                        >\n                            <UnizonnEditor />\n                        </div>\n                    </div>\n                    <div className=\"uk-width-1-3@m uk-width-1-1@s uk-padding-small uk-padding-remove-vertical\">\n                        <div className=\"uk-width-1-1 uk-margin-small-bottom\">\n                            <button className=\"uk-button uk-button-secondary uk-width-1-2\" type=\"button\">\n                                Go Back\n                            </button>\n                            <button className=\"uk-button uk-button-primary uk-width-1-2\" type=\"button\">\n                                Publish\n                            </button>\n                        </div>\n                        {!this.props.allInterest.loading ? (\n                            <Select\n                                name=\"form-field-name\"\n                                value={value}\n                                onChange={this.handleChange}\n                                placeholder=\"Add categories or interest\"\n                                multi={true}\n                                closeOnSelect={true}\n                                removeSelected={this.state.removeSelected}\n                                simpleValue={false}\n                                options={category}\n                            />\n                        ) : null}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(\n    compose(\n        withApollo,\n        graphql<Response, {}, Props>(ALL_INTEREST, {\n            name: 'allInterest',\n        }),\n    )(ComposeWrite),\n);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Containers/ComposeArticle/index.tsx","import * as express from 'express';\nimport * as React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { StaticRouter } from 'react-router-dom';\n\nimport { getBundles } from 'react-loadable/webpack';\nimport { Capture } from 'react-loadable';\nimport stats from '../build/react-loadable.json';\nimport App from './Containers/App';\nimport 'isomorphic-unfetch';\nimport ApolloClient from 'apollo-client';\nimport { ApolloProvider, renderToStringWithData, getDataFromTree } from 'react-apollo';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport fetch from 'node-fetch';\n// import { createPersistedQueryLink } from 'apollo-link-persisted-queries';\nimport {\n  errorLink,\n  httpLinkAuth,\n  requestLink,\n  retryLink,\n  stateLink\n} from './link';\nimport Html from 'Html';\n\nconst links = [\n  errorLink,\n  retryLink,\n  stateLink,\n  httpLinkAuth\n];\n\nlet assets: any;\n\nString.prototype.truncString = function(this: string, add: string, max: number) {\n  add = add || '...';\n  return (this.length > max ? this.substring(0, max) + add : this);\n};\n\nString.prototype.lengthInMinutes = function(this: string) {\n  \n    const min = this.split(' ').length / 250;\n    if (min <= 0 || min === 0) {\n      return 'less than a minute read';\n    } else if (min <= 0.9 || min === 0.9) {\n      return 'less than a minute read';\n    } else {\n      return `${min} min read`;\n    }\n};\n\nconst syncLoadAssets = () => {\n    assets = require(process.env.RAZZLE_ASSETS_MANIFEST!);\n};\nsyncLoadAssets();\n\nconst server = express();\n\nserver\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR!))\n  .get('/*', (req: express.Request, res: express.Response) => {\n    \n    if (process.env.NODE_ENV === 'production') {\n      // links.unshift(createPersistedQueryLink());\n    }\n\n    const client = new ApolloClient({\n      ssrMode: true,\n      link: ApolloLink.from(links),\n      cache: new InMemoryCache(),\n    });\n    \n    const context = {} as any;\n    const modules = [] as any;\n    const markup = (\n      // tslint:disable-next-line:no-unused-expression\n      <Capture report={(moduleName) => modules.push(moduleName)}>\n        <ApolloProvider client={client}>\n            <StaticRouter context={context} location={req.url}>\n              <App />\n            </StaticRouter>\n        </ApolloProvider>\n      </Capture>\n    );\n\n    const bundles = getBundles(stats, modules);\n    const chunks = bundles.filter((bundle) => bundle.file.endsWith('.js'));\n\n    renderToStringWithData(markup).then((content) => {\n      res.status(200);\n      const html = <Html assets={assets} markup={markup} client={client} />;\n      res.send(`<!doctype html>\\n${renderToStaticMarkup(html)}`);\n      res.end();\n    })\n    .catch((e) => {\n      console.error('RENDERING ERROR:', e); // eslint-disable-line no-console\n      /* res.status(500);\n      res.end(\n        `An error occurred. Please submit ane:\\n\\n${\n          e.stack\n        }`\n      );*/\n      res.status(200);\n      const html = <Html assets={assets} markup={markup} client={client} />;\n      res.send(`<!doctype html>\\n${renderToStaticMarkup(html)}`);\n      res.end();\n    });\n  });\n\nexport default server;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/server.tsx","module.exports = require(\"react-apollo\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-apollo\"\n// module id = react-apollo\n// module chunks = 0"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAOA;AAKA;;;;;;;;;ACjEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAQA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;;AAAA;AACA;AACA;AACA;AASA;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAeA;AACA;AAAA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA+CA;AA7CA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAMA;AAKA;AACA;AASA;AAcA;AACA;AAEA;AAIA;AACA;AACA;;;;;;;;;AC1GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAmBA;AACA;AAAA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AAZA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAIA;AACA;AACA;;;;;;;;;AC7EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAQA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAuBA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAqCA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAsHA;AA3KA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AAEA;AACA;AACA;AACA;AACA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAYA;AACA;AAMA;AAOA;AAMA;AAOA;AACA;AAMA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAGA;AACA;AAEA;;;;;;;;;ACrSA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;;AACA;AACA;AACA;AACA;AACA;AAyPA;AAvPA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AAEA;AACA;AACA;;AAAA;AACA;AAKA;AACA;AAGA;AACA;AAMA;AAEA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AAEA;AACA;AAKA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AAEA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AAMA;AACA;AAKA;AACA;AASA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;;;;;;;;;ACrRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAqBA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAmGA;AAzIA;AACA;AACA;AACA;AACA;AACA;AAmCA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAOA;AACA;AACA;AAEA;AACA;AAEA;AAIA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AASA;AACA;AAEA;AAUA;AAOA;AACA;AACA;AACA;AACA;AAEA;AAUA;AACA;AAEA;AAIA;AACA;;;;;;;;;ACnMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAqBA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAgQA;AA9PA;AACA;AAUA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAUA;AAEA;AAOA;AACA;AAIA;AACA;AACA;AAOA;AACA;AAOA;AACA;AAQA;AAOA;AASA;AAIA;AAIA;AACA;AAEA;AACA;AAGA;AACA;AAUA;AACA;AAGA;AACA;AAUA;AACA;AAGA;AACA;AAUA;AACA;AAGA;AACA;AAUA;AACA;AAGA;AACA;AAUA;AACA;AAGA;AACA;AAUA;AACA;AAGA;AACA;AAMA;AACA;AACA;AAIA;AACA;AAGA;AACA;AAMA;AACA;AACA;AAIA;AAcA;AACA;AACA;AACA;AAEA;AAUA;AACA;AAEA;AAIA;AACA;;;;;;;;;ACrXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAmBA;AAAA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA6DA;AA3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAYA;AACA;AAUA;AACA;AAEA;;;;;;;;;ACjHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAcA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA2TA;AAzeA;AAKA;AACA;AAEA;AAMA;AACA;;;;;;;;;AC/YA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAgBA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAqEA;AAnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAIA;AAGA;AACA;AACA;AAGA;AAIA;AAiBA;AACA;AAEA;AAIA;AACA;;;;;;;;;AClHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AC/GA;;;;A","sourceRoot":""}