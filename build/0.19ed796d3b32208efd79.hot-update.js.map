{"version":3,"file":"0.19ed796d3b32208efd79.hot-update.js","sources":["webpack:///./src/Html.tsx","webpack:///./src/link.ts","webpack:///./src/server.tsx","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"react-async-component\"","webpack:///external \"react-router-dom\""],"sourcesContent":["//tslint:disable\r\nimport * as React from 'react';\r\nimport serialize from 'serialize-javascript';\r\n\r\nconst Html = ({ assets, markup, client: { cache }, asyncState }) => (\r\n  <html lang=\"en\">\r\n    <head>\r\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n      <meta charSet=\"utf-8\" />\r\n      <title>Unizonn</title>\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=yes\" />\r\n      <meta name=\"mobile-web-app-capable\" content=\"yes\" />\r\n              \r\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\" />\r\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\" />\r\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\" />\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n      <link rel=\"manifest\" href=\"/site.webmanifest\" />\r\n      <link rel=\"mask-icon\" href=\"/safari-pinned-tab.svg\" color=\"#5bbad5\" />\r\n      <meta name=\"msapplication-TileColor\" content=\"#da532c\" />\r\n      <meta name=\"theme-color\" content=\"teal\" />\r\n      <link href=\"https://fonts.googleapis.com/css?family=Poppins\" rel=\"stylesheet\" crossOrigin=\"anonymous\" />\r\n      <link href=\"https://fonts.googleapis.com/css?family=Roboto+Mono:400,500,700\" rel=\"stylesheet\" crossOrigin=\"anonymous\" />\r\n      <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" crossOrigin=\"anonymous\" />\r\n      <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/fonts/fontawesome-webfont.svg\" crossOrigin=\"anonymous\" />\r\n      <link href=\"https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.2/assets/owl.carousel.css\" rel=\"stylesheet\" crossOrigin=\"anonymous\" />\r\n\r\n      {\r\n        assets.client.css\r\n          ? <link rel=\"stylesheet\" href={assets.client.css} />\r\n          : null\r\n      }\r\n              \r\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/uikit/3.0.0-beta.40/js/uikit.min.js\" />\r\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/uikit/3.0.0-beta.40/js/uikit-icons.min.js\" />\r\n      {\r\n        process.env.NODE_ENV === 'production'\r\n          ? <script src={assets.client.js} defer />\r\n          : <script src={assets.client.js} defer crossOrigin=\"anonymous\" />\r\n      }\r\n    </head>\r\n    <body>\r\n      <div id=\"root\">{markup}</div>\r\n      <script\r\n        charSet=\"UTF-8\"\r\n        dangerouslySetInnerHTML={{\r\n          __html: `,`,\r\n        }}\r\n      />\r\n      <script\r\n        charSet=\"UTF-8\"\r\n        dangerouslySetInnerHTML={{\r\n          __html: `window.__APOLLO_STATE__=${JSON.stringify(cache.extract())};`,\r\n        }}\r\n      />\r\n      <script\r\n        charSet=\"UTF-8\"\r\n        dangerouslySetInnerHTML={{\r\n          __html: `window.ASYNC_COMPONENT_STATE=${serialize(asyncState)};`,\r\n        }}\r\n      />\r\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/animejs/2.2.0/anime.min.js\" />\r\n      <script src=\"./js/lib/jquery.js\" />\r\n      <script src=\"./js/lib/bootstrap.min.js\" />\r\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.2/owl.carousel.min.js\" />\r\n      <script src=\"./js/lib/css3-animate-it.js\" />\r\n      <script src=\"./crack.js\" />\r\n      <script src=\"./timeago-in-words.js\" />\r\n      <script>\r\n        {\r\n        // tslint:disable-next-line:only-arrow-functions\r\n        /*function anima() {\r\n          [].slice.call(document.querySelectorAll('.grid--effect-vega > .grid__item')).forEach(function(stackEl) {\r\n            new VegaFx(stackEl);\r\n          });\r\n          [].slice.call(document.querySelectorAll('.grid--effect-castor > .grid__item')).forEach(function(stackEl) {\r\n            new CastorFx(stackEl);\r\n          });\r\n          [].slice.call(document.querySelectorAll('.grid--effect-hamal > .grid__item')).forEach(function(stackEl) {\r\n            new HamalFx(stackEl);\r\n          });\r\n          [].slice.call(document.querySelectorAll('.grid--effect-polaris > .grid__item')).forEach(function(stackEl) {\r\n            new PolarisFx(stackEl);\r\n          });\r\n          [].slice.call(document.querySelectorAll('.grid--effect-alphard > .grid__item')).forEach(function(stackEl) {\r\n            new AlphardFx(stackEl);\r\n          });\r\n          [].slice.call(document.querySelectorAll('.grid--effect-altair > .grid__item')).forEach(function(stackEl) {\r\n            new AltairFx(stackEl);\r\n          });\r\n          [].slice.call(document.querySelectorAll('.grid--effect-rigel > .grid__item')).forEach(function(stackEl) {\r\n            new RigelFx(stackEl);\r\n          });\r\n          [].slice.call(document.querySelectorAll('.grid--effect-canopus > .grid__item')).forEach(function(stackEl) {\r\n            new CanopusFx(stackEl);\r\n          });\r\n          [].slice.call(document.querySelectorAll('.grid--effect-pollux > .grid__item')).forEach(function(stackEl) {\r\n            new PolluxFx(stackEl);\r\n          });\r\n          [].slice.call(document.querySelectorAll('.grid--effect-deneb > .grid__item')).forEach(function(stackEl) {\r\n            new DenebFx(stackEl);\r\n          });\r\n        };*/\r\n        }\r\n      </script>\r\n      <script src=\"/static/bundle.js\" charSet=\"UTF-8\" />\r\n    </body>\r\n  </html>\r\n);\r\n\r\nexport default Html;\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Html.tsx","import { ApolloLink } from 'apollo-link';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport { WebSocketLink } from 'apollo-link-ws';\r\nimport { onError } from 'apollo-link-error';\r\nimport { getMainDefinition } from 'apollo-utilities';\r\nimport { Cookies } from 'react-cookie-banner';\r\n// import { createPersistedQueryLink } from 'apollo-link-persisted-queries';\r\nimport { RetryLink } from 'apollo-link-retry';\r\nimport resolvers from 'Graphql/Resolvers';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { withClientState } from 'apollo-link-state';\r\nimport fetch from 'node-fetch';\r\n\r\nconst AUTH_TOKEN = 'token';\r\nexport const cookies = new Cookies('unizonn');\r\n\r\nexport const errorLink = onError(({ graphQLErrors, networkError }) => {\r\n  /*\r\n  onError receives a callback in the event a GraphQL or network error occurs.\r\n  This example is a bit contrived, but in the real world, you could connect\r\n  a logging service to the errorLink or perform a specific action in response\r\n  to an error.\r\n  */\r\n  // tslint:disable-next-line:curly\r\n  if (graphQLErrors)\r\n    graphQLErrors.map(({ message, location, path }) =>\r\n      console.log(\r\n        `[GraphQL error]: Message: ${message}, Location: ${location}, Path: ${path}`\r\n      )\r\n    );\r\n  // tslint:disable-next-line:curly\r\n  if (networkError) console.log(`[Network error]: ${networkError}`);\r\n});\r\n\r\nexport const httpLink = new HttpLink({ uri: 'https://uniserver.now.sh', fetch });\r\n\r\nexport const middlewareLink = new ApolloLink((operation: any, forward: any) => {\r\n  // get the authentication token from local storage if it exists\r\n  const authToken = cookies.get(AUTH_TOKEN);\r\n  // return the headers to the context so httpLink can read them\r\n  operation.setContext({\r\n    headers: {\r\n      Authorization: authToken ? `Bearer ${authToken}` : '',\r\n    }\r\n  });\r\n  return forward(operation);\r\n});\r\n\r\nexport const httpLinkAuth = middlewareLink.concat(httpLink);\r\n\r\nexport const subscriptionLink = (config = {}) =>\r\n  new WebSocketLink({\r\n    uri:\r\n      process.env.NODE_ENV !== 'production'\r\n        ? 'ws://uniserver.now.sh'\r\n        : 'wss://uniserver.now.sh',\r\n    options: { reconnect: true },\r\n    ...config,\r\n  });\r\n\r\nexport const queryOrMutationLink = (config = {}) =>\r\n  // turn on CDN support via GET\r\n  // createPersistedQueryLink({ useGETForHashedQueries: true }).concat(\r\n    new HttpLink({\r\n      ...config,\r\n      credentials: 'same-origin',\r\n    });\r\n  // );\r\n\r\nexport const requestLink = ({ queryOrMutationLink, subscriptionLink }) =>\r\n  /*\r\n    This link checks if the operation is a subscription.\r\n    If it is, we use our subscription link to retrieve data over WebSockets.\r\n    If it is a query or mutation, we retrieve data over HTTP.\r\n  */\r\n  ApolloLink.split(\r\n    ({ query }) => {\r\n      const { kind, operation } = getMainDefinition(query);\r\n      return kind === 'OperationDefinition' && operation === 'subscription';\r\n    },\r\n    subscriptionLink,\r\n    queryOrMutationLink\r\n);\r\n\r\nconst defaults = { appState: 'INITIAL' };\r\n\r\nexport const retryLink = new RetryLink();\r\n\r\nexport const cache = new InMemoryCache();\r\n\r\nexport const stateLink = withClientState({\r\n  cache,\r\n  resolvers,\r\n  defaults\r\n});\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/link.ts","import * as express from 'express';\nimport * as React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport { StaticRouter } from 'react-router-dom';\n\nimport { getBundles } from 'react-loadable/webpack';\nimport { Capture } from 'react-loadable';\nimport stats from '../build/react-loadable.json';\nimport App from './Containers/App';\nimport { AsyncComponentProvider, createAsyncContext } from 'react-async-component';\nimport asyncBootstrapper from 'react-async-bootstrapper';\nimport 'isomorphic-unfetch';\nimport ApolloClient from 'apollo-client';\nimport { ApolloProvider, renderToStringWithData, getDataFromTree } from 'react-apollo';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport fetch from 'node-fetch';\n// import { createPersistedQueryLink } from 'apollo-link-persisted-queries';\nimport {\n  errorLink,\n  httpLinkAuth,\n  requestLink,\n  retryLink,\n  stateLink\n} from './link';\nimport Html from 'Html';\n\nconst links = [\n  errorLink,\n  retryLink,\n  stateLink,\n  httpLinkAuth\n];\n\nlet assets: any;\n\nString.prototype.truncString = function(this: string, add: string, max: number) {\n  add = add || '...';\n  return (this.length > max ? this.substring(0, max) + add : this);\n};\n\nString.prototype.lengthInMinutes = function(this: string) {\n  \n    const min = this.split(' ').length / 250;\n    if (min <= 0 || min === 0) {\n      return 'less than a minute read';\n    } else if (min <= 0.9 || min === 0.9) {\n      return 'less than a minute read';\n    } else {\n      return `${min} min read`;\n    }\n};\n\nconst syncLoadAssets = () => {\n    assets = require(process.env.RAZZLE_ASSETS_MANIFEST!);\n};\nsyncLoadAssets();\n\nconst server = express();\n\nserver\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR!))\n  .get('/*', (req: express.Request, res: express.Response) => {\n    \n    if (process.env.NODE_ENV === 'production') {\n      // links.unshift(createPersistedQueryLink());\n    }\n\n    const client = new ApolloClient({\n      ssrMode: true,\n      link: ApolloLink.from(links),\n      cache: new InMemoryCache(),\n    });\n    \n    const context = {} as any;\n    const modules = [] as any;\n    const asyncContext = createAsyncContext();\n    const markup = (\n      // tslint:disable-next-line:no-unused-expression\n      <AsyncComponentProvider asyncContext={asyncContext} >\n        <ApolloProvider client={client}>\n            <StaticRouter context={context} location={req.url}>\n              <App />\n            </StaticRouter>\n        </ApolloProvider>\n      </AsyncComponentProvider>\n    );\n\n    const bundles = getBundles(stats, modules);\n    const chunks = bundles.filter((bundle) => bundle.file.endsWith('.js'));\n\n    asyncBootstrapper(markup).then(() => {\n\n      const asyncState = asyncContext.getState();\n      renderToStringWithData(markup).then((content) => {\n        res.status(200);\n        const html = <Html assets={assets} markup={markup} client={client} asyncState={asyncState} />;\n        res.send(`<!doctype html>\\n${renderToString(html)}`);\n        res.end();\n      })\n      .catch((e) => {\n        console.error('RENDERING ERROR:', e); // eslint-disable-line no-console\n        /* res.status(500);\n        res.end(\n          `An error occurred. Please submit ane:\\n\\n${\n            e.stack\n          }`\n        );*/\n        res.status(200);\n        const html = <Html assets={assets} markup={markup} client={client} />;\n        res.send(`<!doctype html>\\n${renderToStaticMarkup(html)}`);\n        res.end();\n      });\n    });\n    \n  });\n\nexport default server;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/server.tsx","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = react\n// module chunks = 0","module.exports = require(\"react-apollo\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-apollo\"\n// module id = react-apollo\n// module chunks = 0","module.exports = require(\"react-async-component\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-async-component\"\n// module id = react-async-component\n// module chunks = 0","module.exports = require(\"react-router-dom\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-router-dom\"\n// module id = react-router-dom\n// module chunks = 0"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAEA;AAGA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAqCA;AAKA;;;;;;;;;;;;;;;;;;;;;AC9GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;;;;;AAKA;AACA;AACA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAIA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AAEA;AACA;;;;AAIA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;AC9FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvHA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}