{"version":3,"file":"0.63e3a7647cb7789409c4.hot-update.js","sources":["webpack:///./src/Containers/Auth/Signup/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { withRouter, RouteComponentProps, Link } from 'react-router-dom';\nimport { compose, withApollo, graphql } from 'react-apollo';\nimport { ChildProps } from 'react-apollo/types';\nimport { SIGNUP_USER } from 'Graphql/Mutation';\nimport { User } from 'CustomTypings/schema';\nimport { validateSignup } from 'Utils/helpers';\nimport * as UIkit from 'uikit';\nimport { AUTH_TOKEN, CURRENT_USER } from '../../../constants';\nimport './style.css';\n\ninterface InputProps {\n    email: string;\n    password: string;\n}\n\ninterface Response {\n    token: string;\n    user: User;\n}\n\ninterface Props {\n    // tslint:disable-next-line:no-any\n    signup: any;\n    // tslint:disable-next-line:no-any\n    refreshToken?: any;\n    // tslint:disable-next-line:no-any\n    client?: any;\n}\n\nclass Signup extends React.Component<RouteComponentProps & Props & ChildProps<Response, InputProps>, {}> {\n    state = {\n        show: false,\n        email: '',\n        username: '',\n        password: '',\n        confirmPassword: '',\n        gender: '',\n        userType: '',\n        firstname: '',\n        lastname: '',\n        everFocusedEmail: false,\n        everFocusedPassword: false,\n        inFocus: '',\n        loading: false,\n    };\n\n    handleEmailChange = (evt) => {\n        this.setState({ email: evt.target.value });\n    }\n\n    handlePasswordChange = (evt) => {\n        this.setState({ password: evt.target.value });\n    }\n\n    handleConPasswordChange = (evt) => {\n        this.setState({ confirmPassword: evt.target.value });\n    }\n\n    handleUsernameChange = (evt) => {\n        this.setState({ username: evt.target.value });\n    }\n\n    handleFnameChange = (evt) => {\n        this.setState({ firstname: evt.target.value });\n    }\n\n    handleLnameChange = (evt) => {\n        this.setState({ lastname: evt.target.value });\n    }\n\n    handleUserTypeChange = (evt) => {\n        this.setState({ userType: evt.target.value });\n    }\n\n    handleGenderChange = (evt) => {\n        this.setState({ gender: evt.target.value });\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault();\n        if (!this.canBeSubmitted()) {\n            return;\n        }\n        this.setState({ loading: true });\n        const { email, password, username, firstname, lastname, gender, userType } = this.state;\n        this.props\n            .signup({\n                variables: {\n                    email,\n                    password,\n                    username,\n                    firstname,\n                    lastname,\n                    userType,\n                    gender,\n                },\n            })\n            .then((result) => {\n                const token = result.data.signup.token;\n                localStorage.setItem(AUTH_TOKEN, token);\n                localStorage.setItem(CURRENT_USER, result.data.signup.user);\n                this.props.refreshToken(token);\n                this.setState({ loading: false });\n                this.props.history.replace('/add/profile');\n            })\n            .catch((err) => {\n                this.setState({ loading: false });\n                UIkit.notification(`${err.message}`, { status: 'danger', pos: 'top-right' });\n            });\n    }\n\n    canBeSubmitted() {\n        const errors = validateSignup(\n            this.state.email,\n            this.state.password,\n            this.state.username,\n            this.state.confirmPassword,\n            this.state.firstname,\n            this.state.lastname,\n            this.state.gender,\n            this.state.userType,\n        );\n        const isDisabled = Object.keys(errors).some((x) => errors[x]);\n        return !isDisabled;\n    }\n\n    componentWillMount() {\n        const email = this.props.location.email;\n        if (email) {\n            this.setState({ email });\n        }\n    }\n\n    render() {\n        const errors = validateSignup(\n            this.state.email,\n            this.state.password,\n            this.state.username,\n            this.state.confirmPassword,\n            this.state.firstname,\n            this.state.lastname,\n            this.state.gender,\n            this.state.userType,\n        );\n        const isDisabled = Object.keys(errors).some((x) => errors[x]);\n\n        return (\n            <div\n                className=\"uk-flex uk-flex-stretch\"\n                // tslint:disable-next-line:jsx-boolean-value\n                data-uk-grid\n                style={{ backgroundColor: '#ffffff' }}\n            >\n                <div className=\"uk-width-2-5 uk-visible@m sideBg uk-flex uk-flex-middle \" id=\"sideBg\">\n                    <div\n                        className=\"uk-position-relative uk-visible-toggle uk-light\"\n                        data-uk-slideshow=\"animation: scale\"\n                    >\n                        <ul className=\"uk-slideshow-items\">\n                            <li>\n                                <img\n                                    src=\"https://getuikit.com/docs/images/photo.jpg\"\n                                    alt=\"\"\n                                    // tslint:disable-next-line:jsx-boolean-value\n                                    uk-cover\n                                />\n                            </li>\n                            <li>\n                                <img\n                                    src=\"https://getuikit.com/docs/images/dark.jpg\"\n                                    alt=\"\"\n                                    // tslint:disable-next-line:jsx-boolean-value\n                                    data-uk-cover\n                                />\n                            </li>\n                            <li>\n                                <img\n                                    src=\"https://getuikit.com/docs/images/light.jpg\"\n                                    alt=\"\"\n                                    // tslint:disable-next-line:jsx-boolean-value\n                                    data-uk-cover\n                                />\n                            </li>\n                        </ul>\n                        <a\n                            className=\"uk-position-center-left uk-position-small uk-hidden-hover\"\n                            href=\"#\"\n                            // tslint:disable-next-line:jsx-boolean-value\n                            data-uk-slidenav-previous\n                            data-uk-slideshow-item=\"previous\"\n                        />\n                        <a\n                            className=\"uk-position-center-right uk-position-small uk-hidden-hover\"\n                            href=\"#\"\n                            // tslint:disable-next-line:jsx-boolean-value\n                            data-uk-slidenav-next\n                            data-uk-slideshow-item=\"next\"\n                        />\n                    </div>\n                </div>\n                <div\n                    className=\"uk-container uk-width-3-5@m uk-width-1-1@s uk-flex\n                      uk-flex-stretch uk-flex-middle uk-box-shadow-small\"\n                >\n                    <form\n                        className=\"uk-form-horizontal uk-width-1-1 uk-margin-large uk-padding-large uk-padding-remove-vertical\"\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className=\"uk-margin\" style={{ marginTop: 40 }}>\n                            <h3 className=\"uk-heading-primary uk-align-center\">Signup </h3>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"firstname\">\n                                Username\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <input\n                                    id=\"firstname\"\n                                    className={`uk-input ${errors.username ? 'uk-form-danger' : ''} `}\n                                    type=\"text\"\n                                    value={this.state.username}\n                                    required={true}\n                                    onChange={this.handleUsernameChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"firstname\">\n                                Firstname\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <input\n                                    id=\"firstname\"\n                                    className={`uk-input ${errors.firstname ? 'uk-form-danger' : ''} `}\n                                    type=\"text\"\n                                    value={this.state.firstname}\n                                    required={true}\n                                    onChange={this.handleFnameChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"lastname\">\n                                Lastname\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <input\n                                    id=\"lastname\"\n                                    className={`uk-input ${errors.lastname ? 'uk-form-danger' : ''} `}\n                                    type=\"text\"\n                                    value={this.state.lastname}\n                                    required={true}\n                                    onChange={this.handleLnameChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"email\">\n                                Email\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <input\n                                    id=\"email\"\n                                    className={`uk-input ${errors.email ? 'uk-form-danger' : ''} `}\n                                    type=\"email\"\n                                    value={this.state.email}\n                                    required={true}\n                                    onChange={this.handleEmailChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"form-horizontal-text\">\n                                Password\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <input\n                                    className={`uk-input ${errors.password ? 'uk-form-danger' : ''} `}\n                                    type=\"password\"\n                                    id=\"password\"\n                                    value={this.state.password}\n                                    required={true}\n                                    onChange={this.handlePasswordChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"confirmPassword\">\n                                Confirm Password\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <input\n                                    className={`uk-input ${errors.confirmPassword ? 'uk-form-danger' : ''} `}\n                                    type=\"password\"\n                                    id=\"confirmPassword\"\n                                    value={this.state.confirmPassword}\n                                    required={true}\n                                    onChange={this.handleConPasswordChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"form-horizontal-text\">\n                                Gender\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <select\n                                    className=\"uk-select\"\n                                    value={this.state.gender}\n                                    required={true}\n                                    onChange={this.handleGenderChange}\n                                >\n                                    <option value=\"\">Select sex</option>\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\" htmlFor=\"form-horizontal-text\">\n                                I am a\n                            </label>\n                            <div className=\"uk-form-controls\">\n                                <select\n                                    className=\"uk-select\"\n                                    value={this.state.userType}\n                                    required={true}\n                                    onChange={this.handleUserTypeChange}\n                                >\n                                    <option value=\"\">Select one</option>\n                                    <option value=\"Student\">Student</option>\n                                    <option value=\"Lecturer\">Lecturer</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            {this.state.loading ? (\n                                <div data-uk-spinner=\"ratio: 1\" />\n                            ) : (\n                                <button\n                                    className={`uk-button uk-button-primary uk-width-1-1 ${\n                                        isDisabled ? 'disabled' : 'disabled'\n                                    }`}\n                                    type=\"submit\"\n                                >\n                                    Sign Up\n                                </button>\n                            )}\n                        </div>\n                        <hr className=\"uk-divider-icon\" />\n                        <div className=\"uk-margin\">\n                            <p className={`uk-button uk-button-text}`}>Already have an account?</p>\n                            <Link\n                                className={`uk-button uk-button-secondary\n                 uk-align-right`}\n                                to=\"/login\"\n                            >\n                                Login now\n                            </Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(\n    compose(\n        withApollo,\n        graphql<Response, InputProps, Props>(SIGNUP_USER, {\n            name: 'signup',\n        }),\n    )(Signup),\n);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Containers/Auth/Signup/index.tsx"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAqBA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAgQA;AA9PA;AACA;AAUA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAUA;AAEA;AAOA;AACA;AAIA;AACA;AACA;AAOA;AACA;AAOA;AACA;AAQA;AAOA;AASA;AAIA;AAIA;AACA;AAEA;AACA;AAGA;AACA;AAUA;AACA;AAGA;AACA;AAUA;AACA;AAGA;AACA;AAUA;AACA;AAGA;AACA;AAUA;AACA;AAGA;AACA;AAUA;AACA;AAGA;AACA;AAUA;AACA;AAGA;AACA;AAMA;AACA;AACA;AAIA;AACA;AAGA;AACA;AAMA;AACA;AACA;AAIA;AAcA;AACA;AACA;AACA;AAEA;AAUA;AACA;AAEA;AAIA;AACA;;;;;A","sourceRoot":""}