{"version":3,"file":"0.342790e41eda56679f6e.hot-update.js","sources":["webpack:///./src/Graphql/Query/index.ts"],"sourcesContent":["import gql from 'graphql-tag';\r\nimport { USER_FRAGMENT, ARTICLE_FRAGMENT } from 'Graphql/Fragment';\r\n\r\n/**\r\n * @description user registration for graphql mutation\r\n */\r\nexport const SIGNUP_USER = gql`\r\n  mutation signupUser($email: String!, $password: String, $firstname: String,\r\n   $lastname: String, $userType: String!, $gender: String! ){\r\n    signup( email: $email, password: $password, firstname: $firstname,\r\n      lastname: $lastname, userType: $userType, gender: $gender) {\r\n      token,\r\n      user{\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * @description user login for graphql mutation\r\n */\r\nexport const LOGIN_USER = gql`\r\n  mutation loginUser($email: String!, $password: String, $firstname: String,\r\n   $lastname: String, $userType: String!, $gender: String! ){\r\n    login( email: $email, password: $password ) {\r\n      token,\r\n      user{\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * @description check if user exist by email\r\n */\r\nexport const USER_EXIST = gql`\r\n  query userExist($email: String!){\r\n    userExist( email: $email)\r\n  }\r\n`;\r\n\r\n/**\r\n * @description check if current user article\r\n */\r\nexport const ARTICLES = gql`\r\n  query articles {\r\n    articles{\r\n      ...articleFragment\r\n    }\r\n  }\r\n  ${ARTICLE_FRAGMENT}\r\n`;\r\n\r\n/**\r\n * @description get one article by id\r\n */\r\nexport const GET_ARTICLE_BY_ID = gql`\r\n  query getArticleById($id: ID!){\r\n    getArticleById(id: $id){\r\n      ...articleFragment\r\n    }\r\n  }\r\n  ${ARTICLE_FRAGMENT}\r\n`;\r\n\r\n/**\r\n * @description get one article by slug\r\n */\r\nexport const GET_ARTICLE_BY_SLUG = gql`\r\n  query getArticleBySlug($slug: ID!){\r\n    getArticleBySlug(slug: $slug){\r\n      ...articleFragment\r\n    }\r\n  }\r\n  ${ARTICLE_FRAGMENT}\r\n`;\r\n\r\n/**\r\n * @description check if current user article\r\n */\r\nexport const ME = gql`\r\n  query me {\r\n    me{\r\n      ...userFragment\r\n      connectTo{\r\n        to{\r\n          email\r\n          id\r\n          firstname\r\n          lastname\r\n          username\r\n        }\r\n        from{\r\n          email\r\n          id\r\n          firstname\r\n          lastname\r\n          username\r\n        }\r\n      }\r\n      avatar{\r\n        url\r\n        name\r\n      }\r\n      articles{\r\n        id\r\n        title\r\n        body\r\n      }\r\n    }\r\n  }\r\n  ${USER_FRAGMENT}\r\n`;\r\n\r\n/**\r\n * @description get all countries\r\n */\r\nexport const ALL_COUNTRIES = gql`\r\n  query allcountries{\r\n    getCountry{\r\n      id\r\n      name\r\n      shortName\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * @description get all departments in institution\r\n */\r\nexport const ALL_DEPARTMENTS = gql`\r\n  query getDepartment($idInstitutions: ID!){\r\n    getDepartment(idInstitutions: $idInstitutions){\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * @description get all departments\r\n */\r\nexport const ALL_INSTITUTION = gql`\r\n  query getInstitution($idCountry: ID!){\r\n    getInstitution(idCountry: $idCountry){\r\n      id\r\n      title\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * @description get all interest\r\n */\r\nexport const ALL_INTEREST = gql`\r\n  query allInterest{\r\n    allInterest{\r\n      id\r\n      name\r\n      avatar\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * @description get all interest\r\n */\r\nexport const ALL_CHAT = gql`\r\n  query getAllChat{\r\n    getAllChat{\r\n      id\r\n      name\r\n      avatar\r\n      createdAt\r\n    }\r\n  }\r\n`;\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--5!./src/Graphql/Query/index.ts"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;AAEA;AACA;;;;;;;;;;;AAWA;AAAA;AAAA;AAEA;;AAEA;AACA;;;;;;;;;;AAUA;AAAA;AAAA;AAEA;;AAEA;AACA;;;;AAIA;AAAA;AAAA;AAEA;;AAEA;AACA;;;;;;AAMA;AACA;AAAA;AAAA;AAEA;;AAEA;AACA;;;;;;AAMA;AACA;AAAA;AAAA;AAEA;;AAEA;AACA;;;;;;AAMA;AACA;AAAA;AAAA;AAEA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AAAA;AAAA;AAEA;;AAEA;AACA;;;;;;;;AAQA;AAAA;AAAA;AAEA;;AAEA;AACA;;;;;;;AAOA;AAAA;AAAA;AAEA;;AAEA;AACA;;;;;;;AAOA;AAAA;AAAA;AAEA;;AAEA;AACA;;;;;;;;;AASA;AAAA;AAAA;AAEA;;AAEA;AACA;;;;;;;;;AASA;AAAA;AAAA;;;;;A","sourceRoot":""}